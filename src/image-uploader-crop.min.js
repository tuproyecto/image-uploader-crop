!function(i){"use strict";"function"==typeof define&&define.amd?define(["jquery"],i):"object"==typeof module&&module.exports?module.exports=i(require("jquery")):i(jQuery)}(function(i){"use strict";var t=Array.prototype.slice,s=(Array.prototype.splice,{formCrop:null,btnToCrop:null,imgCrop:null,previewImg:null,uploaderImg:null,templateImgUploader:"",preventDuplicity:!1,configImg:{maxWidthImg:0,maxHeightImg:0,minWidthImg:0,minHeightImg:0,allowedExtensions:["jpeg","jpg","png"],sizeLimit:0,sendOriginal:!0,defaultQuality:100},uploadding:{inputName:"file",endpoint:"",params:{}},cropping:{endpoint:"",params:{}},extraDropzones:[i("#wrapper-image-crop")],callbacks:{onCropping:function(i){},onCropComplete:function(i,t,s){},onCropError:function(i,t,s){},onLoadImg:function(i,t,s){},onCompleteLoad:function(i,t,s,e){}},messages:{},showMessage:function(i){return alertify.alert(i)},showConfirm:function(i){var t=new qq.Promise;return alertify.confirm(i,function(i){return i?t.success(i):t.failure()}),t},showPrompt:function(i,t){var s=new qq.Promise;return alertify.prompt(i,function(i,t){return i?s.success(t):s.failure(t)},t),s}}),e={reassignActions:function(){this.settings.uploaderImg.off("complete"),this.settings.uploaderImg.on("complete",e.onCompleteLoadImg.bind(this)),this.settings.btnToCrop?(this.settings.btnToCrop.off("click",e.submitCropImage.bind(this)),this.settings.btnToCrop.on("click",e.submitCropImage.bind(this))):(this.settings.formCrop.off("submit",e.submitCropImage.bind(this)),this.settings.formCrop.on("submit",e.submitCropImage.bind(this)))},destroy:function(){void 0!==this.settings.imgCrop.data("Jcrop")&&this.jcrop_img.destroy(),this.settings.uploaderImg.off("complete"),this.settings.formCrop.off("submit"),this.$element.removeData("imageUploaderCrop")},setImage:function(t,s){t||(t=this.settings.imgCrop.attr("src"))||(t="");try{if(!this.settings.imgCrop)throw"The imgCrop element have not went assign"}catch(i){console.error("Error: "+i+".")}var n=this;void 0!==this.settings.imgCrop.data("Jcrop")?(this.jcrop_img=this.settings.imgCrop.data("Jcrop"),this.jcrop_img.setImage(t,function(){var i=[];i=this.settings.configImg.minWidthImg&&this.settings.configImg.minHeightImg?[this.settings.configImg.minWidthImg,this.settings.configImg.minHeightImg]:this.jcrop_img.getBounds(),e.changeOptsCrop.call(n,{imgSet:t,minWidth:n.settings.configImg.minWidthImg,minHeight:n.settings.configImg.minHeightImg,imgWidth:i[0],imgHeight:i[1]}),n.settings.formCrop.find("input#crop_type").val("url"),n.settings.formCrop.find("input#file_name").val(t),n.settings.formCrop.find("input#file_type").val(t.split(".").slice(-1))})):(this.settings.imgCrop.attr("src",t),e.renderImageCrop.call(this,this.settings.imgCrop,function(){var i=[];i=this.settings.configImg.minWidthImg&&this.settings.configImg.minHeightImg?[this.settings.configImg.minWidthImg,this.settings.configImg.minHeightImg]:this.jcrop_img.getBounds(),e.changeOptsCrop.call(this,{imgSet:t,minWidth:this.settings.configImg.minWidthImg,minHeight:this.settings.configImg.minHeightImg,imgWidth:i[0],imgHeight:i[1]}),this.settings.formCrop.find("input#crop_type").val("url"),this.settings.formCrop.find("input#file_name").val(t),this.settings.formCrop.find("input#file_type").val(t.split(".").slice(-1))}.bind(this))),i.isFunction(s)&&s.call()},renderUploaderImg:function(t){if(!{}.hasOwnProperty.call(i.fn,"fineUploader"))return console.error("Error: The imageUploaderCrop jQuery library do need of the fine-uploader jQuery library."),!1;t.fineUploader({debug:!1,template:this.settings.templateImgUploader,request:this.settings.uploadding,thumbnails:{placeholders:{waitingPath:"img/waiting-generic.png",notAvailablePath:"img/not_available-generic.png"}},autoUpload:!0,multiple:!1,validation:{image:{maxWidth:this.settings.configImg.maxWidthImg||s.configImg.maxWidthImg,maxHeight:this.settings.configImg.maxHeightImg||s.configImg.maxHeightImg},allowedExtensions:this.settings.configImg.allowedExtensions||s.configImg.allowedExtensions,sizeLimit:this.settings.configImg.sizeLimit||s.configImg.sizeLimit,stopOnFirstInvalidFile:!1,itemLimit:0},scaling:{sendOriginal:this.settings.configImg.sendOriginal||s.configImg.sendOriginal,defaultQuality:this.settings.configImg.defaultQuality||s.configImg.defaultQuality},callbacks:{onUpload:e.onLoadImg.bind(this)},messages:i.extend({},this.settings.messages),dragAndDrop:{extraDropzones:this.settings.extraDropzones},showMessage:this.settings.showMessage,showConfirm:this.settings.showConfirm,showPrompt:this.settings.showPrompt})},renderImageCrop:function(t,s){if(!{}.hasOwnProperty.call(i.fn,"Jcrop"))return console.error("Error: The imageUploaderCrop jQuery library needs of the jcrop jQuery library."),!1;var n=this;t.Jcrop({onSelect:e.setCoords.bind(this),onChange:e.setCoords.bind(this),onRelease:function(){},bgColor:"black",bgOpacity:.4,setSelect:[0,0,this.settings.configImg.minWidthImg,this.settings.configImg.minHeightImg],aspectRatio:this.settings.configImg.minWidthImg/this.settings.configImg.minHeightImg,boxWidth:t.parent().width(),boxHeight:0,allowSelect:!1,allowResize:!0},function(){n.jcrop_img=this;var i=n.jcrop_img.getBounds();e.changeOptsCrop.call(n,{imgSet:t.attr("src"),minWidth:n.settings.configImg.minWidthImg,minHeight:n.settings.configImg.minHeightImg,imgWidth:i[0],imgHeight:i[1]}),"function"==typeof s&&s.call()})},changeOptsCrop:function(t,s){var e={imgSet:"",minWidth:0,minHeight:0,imgWidth:0,imgHeight:0,dimSelect:[0,0],ix:0,iy:0};i.extend(e,t),e.dimSelect=function(i,t){var s=Math.min(i,t);return i==t?[i,t]:[s,s]}(e.imgWidth,e.imgHeight),e.ix=(e.imgWidth-e.dimSelect[0])/2,this.jcrop_img.setOptions({trueSize:[Math.floor(e.imgWidth),Math.floor(e.imgHeight)]}),this.settings.previewImg.attr("src",e.imgSet),this.jcrop_img.setSelect([e.ix,e.iy,e.dimSelect[0],e.dimSelect[1]]),"function"==typeof s&&s.call()},submitCropImage:function(t){t.preventDefault();var s=function(t){var s={},e=[];return e=i.prototype.isPrototypeOf(t)?t.serializeArray():i(t).serializeArray(),i.each(e,function(){void 0!==s[this.name]?(s[this.name].push||(s[this.name]=[s[this.name]]),s[this.name].push(this.value||"")):s[this.name]=this.value||""}),s}(this.settings.formCrop);s.targ_w=this.settings.configImg.minWidthImg,s.targ_h=this.settings.configImg.minHeightImg,i.extend(s,this.settings.cropping.params),i.isFunction(this.settings.callbacks.onCropping)&&this.settings.callbacks.onCropping.call(this,this.jcrop_img),this.settings.formCrop.find(":submit").addClass("disabled"),i.post(this.settings.cropping.endpoint,s,e.onSuccessCrop.bind(this)).fail(e.onErrorCrop.bind(this))},setCoords:function(t){var s=this.settings.configImg.minHeightImg/this.settings.configImg.minWidthImg,e=null!==this.jcrop_img&&this.jcrop_img.getBounds(),n=i(this.settings.previewImg.parent()[0]).width()/t.w,o=s*i(this.settings.previewImg.parent()[0]).width()/t.h;this.settings.previewImg.attr("src")&&i(this.settings.previewImg.parent()[0]).height(s*i(this.settings.previewImg.parent()[0]).width()),this.settings.formCrop.find("input.crop-x").val(t.x),this.settings.formCrop.find("input.crop-y").val(t.y),this.settings.formCrop.find("input.crop-w").val(t.w),this.settings.formCrop.find("input.crop-h").val(t.h),e&&this.settings.previewImg.css({width:Math.round(n*e[0])+"px",height:Math.round(o*e[1])+"px",minWidth:Math.round(n*e[0])+"px",minHeight:Math.round(o*e[1])+"px",marginLeft:"-"+Math.round(n*t.x)+"px",marginTop:"-"+Math.round(o*t.y)+"px"})},onLoadImg:function(t,s){var n=this.settings.uploaderImg.fineUploader("getDropTarget",t);void 0!==n&&n.length&&(n.hasClass("image-area-drop")||n.hasClass("wrapper-image-crop"))&&(e.reassignActions.call(this),e.setImage.call(this)),i.isFunction(this.settings.callbacks.onLoadImg)&&this.settings.callbacks.onLoadImg.call(this,this.settings.uploaderImg,t,s)},onCompleteLoadImg:function(t,s,n,o){o.success&&(void 0!==this.settings.imgCrop.data("Jcrop")?this.jcrop_img.setImage(o.file_path,function(){o.file_width,o.file_height;e.changeOptsCrop.call(this,{imgSet:o.file_path,minWidth:this.settings.configImg.minWidthImg,minHeight:this.settings.configImg.minHeightImg,imgWidth:o.file_width,imgHeight:o.file_height},function(){i.isFunction(this.settings.callbacks.onCompleteLoad)&&this.settings.callbacks.onCompleteLoad.call(this,this.settings.uploaderImg,s,n,o)}.bind(this))}.bind(this)):(this.settings.imgCrop.attr("src",o.file_path),e.renderImageCrop.call(this,this.settings.imgCrop,function(){e.changeOptsCrop.call(this,{imgSet:o.file_path,minWidth:this.settings.configImg.minWidthImg,minHeight:this.settings.configImg.minHeightImg,imgWidth:o.file_width,imgHeight:o.file_height},function(){i.isFunction(this.settings.callbacks.onCompleteLoad)&&this.settings.callbacks.onCompleteLoad.call(this,this.settings.uploaderImg,s,n,o)}.bind(this))}.bind(this))),this.settings.formCrop.find("input#crop_type").val("name"),this.settings.formCrop.find("input#file_name").val(o.file_name),this.settings.formCrop.find("input#file_type").val(o.file_type))},onSuccessCrop:function(t,s,e){this.settings.formCrop.find(":submit").removeClass("disabled"),i.isFunction(this.settings.callbacks.onCropComplete)&&this.settings.callbacks.onCropComplete.call(this,this.jcrop_img,t,e)},onErrorCrop:function(t,s,e){this.settings.formCrop.find(":submit").removeClass("disabled"),i.isFunction(this.settings.callbacks.onCropError)&&this.settings.callbacks.onCropError.call(this,this.jcrop_img,t,e)}};i.imageUploaderCrop=function(t,s){s||(s={});this.jcrop_img=null,this.element=t,this.$element=i(t),i.isFunction(this.init)&&this.init(t,s)},i.imageUploaderCrop.prototype={settings:{},init:function(t,n){this.settings=i.extend({},s,n),this.settings.imgCrop&&void 0!==this.settings.imgCrop.data("Jcrop")&&(this.jcrop_img=this.settings.imgCrop.data("Jcrop"),this.jcrop_img.destroy()),this.settings.preventDuplicity||(e.reassignActions.call(this),e.renderUploaderImg.call(this,this.settings.uploaderImg),e.renderImageCrop.call(this,this.settings.imgCrop))},changeImage:function(i,t){e.reassignActions.call(this),e.setImage.call(this,i,t)},getImgCrop:function(){return this.settings.imgCrop},getFormCrop:function(){return this.settings.formCrop},getUploaderImg:function(){return this.settings.uploaderImg},getPreviewImg:function(){return this.settings.previewImg},destroy:function(){e.destroy.call(this)}},i.fn.imageUploaderCrop=function(s){var e=arguments;if(void 0!==i(this).data("imageUploaderCrop")&&i.isFunction(i(this).data("imageUploaderCrop")[s])){var n=i(this).data("imageUploaderCrop");return n[s].apply(n,t.call(e,1))}if("object"==typeof s||!s)return this.each(function(t,e){var n=new i.imageUploaderCrop(this,s);i(this).data("imageUploaderCrop",n)});i.error('Method "'+s+'" does not exist in imageUploaderCrop - (krobing) plugin!')}});
//# sourceMappingURL=data:application/json;charset=utf8;base64,
