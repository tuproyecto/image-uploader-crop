!function(i){"use strict";"function"==typeof define&&define.amd?define(["jquery"],i):"object"==typeof module&&module.exports?module.exports=i(require("jquery")):i(jQuery)}(function(i){"use strict";var t=Array.prototype.slice,s=(Array.prototype.splice,{formCrop:null,btnToCrop:null,imgCrop:null,previewImg:null,uploaderImg:null,templateImgUploader:"",preventDuplicity:!1,configImg:{maxWidthImg:0,maxHeightImg:0,minWidthImg:0,minHeightImg:0,allowedExtensions:["jpeg","jpg","png"],sizeLimit:0,sendOriginal:!0,defaultQuality:100},uploadding:{inputName:"file",endpoint:"",params:{}},cropping:{endpoint:"",params:{}},extraDropzones:[i("#wrapper-image-crop")],callbacks:{onCropping:function(i){},onCropComplete:function(i,t,s){},onCropError:function(i,t,s){},onLoadImg:function(i,t,s){},onCompleteLoad:function(i,t,s,e){}},messages:{},showMessage:function(i){return alertify.alert(i)},showConfirm:function(i){var t=new qq.Promise;return alertify.confirm(i,function(i){return i?t.success(i):t.failure()}),t},showPrompt:function(i,t){var s=new qq.Promise;return alertify.prompt(i,function(i,t){return i?s.success(t):s.failure(t)},t),s}}),e={reassignActions:function(){this.settings.uploaderImg.off("complete"),this.settings.uploaderImg.on("complete",e.onCompleteLoadImg.bind(this)),this.settings.btnToCrop?(this.settings.btnToCrop.off("click",e.submitCropImage.bind(this)),this.settings.btnToCrop.on("click",e.submitCropImage.bind(this))):(this.settings.formCrop.off("submit",e.submitCropImage.bind(this)),this.settings.formCrop.on("submit",e.submitCropImage.bind(this)))},destroy:function(){void 0!==this.settings.imgCrop.data("Jcrop")&&this.jcrop_img.destroy(),this.settings.uploaderImg.off("complete"),this.settings.formCrop.off("submit"),this.$element.removeData("imageUploaderCrop")},setImage:function(t,s){t||(t=this.settings.imgCrop.attr("src"))||(t="");try{if(!this.settings.imgCrop)throw"The imgCrop element have not went assign"}catch(i){console.error("Error: "+i+".")}var n=this;void 0!==this.settings.imgCrop.data("Jcrop")?(this.jcrop_img=this.settings.imgCrop.data("Jcrop"),this.jcrop_img.setImage(t,function(){var i=[];i=this.settings.configImg.minWidthImg&&this.settings.configImg.minHeightImg?[this.settings.configImg.minWidthImg,this.settings.configImg.minHeightImg]:this.jcrop_img.getBounds(),e.changeOptsCrop.call(n,{imgSet:t,minWidth:n.settings.configImg.minWidthImg,minHeight:n.settings.configImg.minHeightImg,imgWidth:i[0],imgHeight:i[1]}),n.settings.formCrop.find("input#crop_type").val("url"),n.settings.formCrop.find("input#file_name").val(t),n.settings.formCrop.find("input#file_type").val(t.split(".").slice(-1))})):(this.settings.imgCrop.attr("src",t),e.renderImageCrop.call(this,this.settings.imgCrop,function(){var i=[];i=this.settings.configImg.minWidthImg&&this.settings.configImg.minHeightImg?[this.settings.configImg.minWidthImg,this.settings.configImg.minHeightImg]:this.jcrop_img.getBounds(),e.changeOptsCrop.call(this,{imgSet:t,minWidth:this.settings.configImg.minWidthImg,minHeight:this.settings.configImg.minHeightImg,imgWidth:i[0],imgHeight:i[1]}),this.settings.formCrop.find("input#crop_type").val("url"),this.settings.formCrop.find("input#file_name").val(t),this.settings.formCrop.find("input#file_type").val(t.split(".").slice(-1))}.bind(this))),i.isFunction(s)&&s.call()},renderUploaderImg:function(t){if(!{}.hasOwnProperty.call(i.fn,"fineUploader"))return console.error("Error: The imageUploaderCrop jQuery library do need of the fine-uploader jQuery library."),!1;t.fineUploader({debug:!1,template:this.settings.templateImgUploader,request:this.settings.uploadding,thumbnails:{placeholders:{waitingPath:"img/waiting-generic.png",notAvailablePath:"img/not_available-generic.png"}},autoUpload:!0,multiple:!1,validation:{image:{maxWidth:this.settings.configImg.maxWidthImg||s.configImg.maxWidthImg,maxHeight:this.settings.configImg.maxHeightImg||s.configImg.maxHeightImg},allowedExtensions:this.settings.configImg.allowedExtensions||s.configImg.allowedExtensions,sizeLimit:this.settings.configImg.sizeLimit||s.configImg.sizeLimit,stopOnFirstInvalidFile:!1,itemLimit:0},scaling:{sendOriginal:this.settings.configImg.sendOriginal||s.configImg.sendOriginal,defaultQuality:this.settings.configImg.defaultQuality||s.configImg.defaultQuality},callbacks:{onUpload:e.onLoadImg.bind(this)},messages:i.extend({},this.settings.messages),dragAndDrop:{extraDropzones:this.settings.extraDropzones},showMessage:this.settings.showMessage,showConfirm:this.settings.showConfirm,showPrompt:this.settings.showPrompt})},renderImageCrop:function(t,s){if(!{}.hasOwnProperty.call(i.fn,"Jcrop"))return console.error("Error: The imageUploaderCrop jQuery library needs of the jcrop jQuery library."),!1;var n=this;t.Jcrop({onSelect:e.setCoords.bind(this),onChange:e.setCoords.bind(this),onRelease:function(){},bgColor:"black",bgOpacity:.4,setSelect:[0,0,this.settings.configImg.minWidthImg,this.settings.configImg.minHeightImg],aspectRatio:this.settings.configImg.minWidthImg/this.settings.configImg.minHeightImg,boxWidth:t.parent().width(),boxHeight:0,allowSelect:!1,allowResize:!0},function(){n.jcrop_img=this;var i=n.jcrop_img.getBounds();e.changeOptsCrop.call(n,{imgSet:t.attr("src"),minWidth:n.settings.configImg.minWidthImg,minHeight:n.settings.configImg.minHeightImg,imgWidth:i[0],imgHeight:i[1]}),"function"==typeof s&&s.call()})},changeOptsCrop:function(t,s){var e={imgSet:"",minWidth:0,minHeight:0,imgWidth:0,imgHeight:0,dimSelect:[0,0],ix:0,iy:0};i.extend(e,t),e.dimSelect=function(i,t){var s=Math.min(i,t);return i==t?[i,t]:[s,s]}(e.imgWidth,e.imgHeight),e.ix=(e.imgWidth-e.dimSelect[0])/2,this.jcrop_img.setOptions({trueSize:[Math.floor(e.imgWidth),Math.floor(e.imgHeight)]}),this.settings.previewImg.attr("src",e.imgSet),this.jcrop_img.setSelect([e.ix,e.iy,e.dimSelect[0],e.dimSelect[1]]),"function"==typeof s&&s.call()},submitCropImage:function(t){t.preventDefault();var s=function(t){var s={},e=[];return e=i.prototype.isPrototypeOf(t)?t.serializeArray():i(t).serializeArray(),i.each(e,function(){void 0!==s[this.name]?(s[this.name].push||(s[this.name]=[s[this.name]]),s[this.name].push(this.value||"")):s[this.name]=this.value||""}),s}(this.settings.formCrop);s.targ_w=this.settings.configImg.minWidthImg,s.targ_h=this.settings.configImg.minHeightImg,i.extend(s,this.settings.cropping.params),i.isFunction(this.settings.callbacks.onCropping)&&this.settings.callbacks.onCropping.call(this,this.jcrop_img),this.settings.formCrop.find(":submit").addClass("disabled"),i.post(this.settings.cropping.endpoint,s,e.onSuccessCrop.bind(this)).fail(e.onErrorCrop.bind(this))},setCoords:function(t){var s=this.settings.configImg.minHeightImg/this.settings.configImg.minWidthImg,e=null!==this.jcrop_img&&this.jcrop_img.getBounds(),n=i(this.settings.previewImg.parent()[0]).width()/t.w,o=s*i(this.settings.previewImg.parent()[0]).width()/t.h;this.settings.previewImg.attr("src")&&i(this.settings.previewImg.parent()[0]).height(s*i(this.settings.previewImg.parent()[0]).width()),this.settings.formCrop.find("input.crop-x").val(t.x),this.settings.formCrop.find("input.crop-y").val(t.y),this.settings.formCrop.find("input.crop-w").val(t.w),this.settings.formCrop.find("input.crop-h").val(t.h),e&&this.settings.previewImg.css({width:Math.round(n*e[0])+"px",height:Math.round(o*e[1])+"px",minWidth:Math.round(n*e[0])+"px",minHeight:Math.round(o*e[1])+"px",marginLeft:"-"+Math.round(n*t.x)+"px",marginTop:"-"+Math.round(o*t.y)+"px"})},onLoadImg:function(t,s){var n=this.settings.uploaderImg.fineUploader("getDropTarget",t);void 0!==n&&n.length&&(n.hasClass("image-area-drop")||n.hasClass("wrapper-image-crop"))&&(e.reassignActions.call(this),e.setImage.call(this)),i.isFunction(this.settings.callbacks.onLoadImg)&&this.settings.callbacks.onLoadImg.call(this,this.settings.uploaderImg,t,s)},onCompleteLoadImg:function(t,s,n,o){o.success&&(void 0!==this.settings.imgCrop.data("Jcrop")?this.jcrop_img.setImage(o.file_path,function(){o.file_width,o.file_height;e.changeOptsCrop.call(this,{imgSet:o.file_path,minWidth:this.settings.configImg.minWidthImg,minHeight:this.settings.configImg.minHeightImg,imgWidth:o.file_width,imgHeight:o.file_height},function(){i.isFunction(this.settings.callbacks.onCompleteLoad)&&this.settings.callbacks.onCompleteLoad.call(this,this.settings.uploaderImg,s,n,o)}.bind(this))}.bind(this)):(this.settings.imgCrop.attr("src",o.file_path),e.renderImageCrop.call(this,this.settings.imgCrop,function(){e.changeOptsCrop.call(this,{imgSet:o.file_path,minWidth:this.settings.configImg.minWidthImg,minHeight:this.settings.configImg.minHeightImg,imgWidth:o.file_width,imgHeight:o.file_height},function(){i.isFunction(this.settings.callbacks.onCompleteLoad)&&this.settings.callbacks.onCompleteLoad.call(this,this.settings.uploaderImg,s,n,o)}.bind(this))}.bind(this))),this.settings.formCrop.find("input#crop_type").val("name"),this.settings.formCrop.find("input#file_name").val(o.file_name),this.settings.formCrop.find("input#file_type").val(o.file_type))},onSuccessCrop:function(t,s,e){this.settings.formCrop.find(":submit").removeClass("disabled"),i.isFunction(this.settings.callbacks.onCropComplete)&&this.settings.callbacks.onCropComplete.call(this,this.jcrop_img,t,e)},onErrorCrop:function(t,s,e){this.settings.formCrop.find(":submit").removeClass("disabled"),i.isFunction(this.settings.callbacks.onCropError)&&this.settings.callbacks.onCropError.call(this,this.jcrop_img,t,e)}};i.imageUploaderCrop=function(t,s){s||(s={});this.jcrop_img=null,this.element=t,this.$element=i(t),i.isFunction(this.init)&&this.init(t,s)},i.imageUploaderCrop.prototype={settings:{},init:function(t,n){this.settings=i.extend({},s,n),this.settings.imgCrop&&void 0!==this.settings.imgCrop.data("Jcrop")&&(this.jcrop_img=this.settings.imgCrop.data("Jcrop"),this.jcrop_img.destroy()),this.settings.preventDuplicity||(e.reassignActions.call(this),e.renderUploaderImg.call(this,this.settings.uploaderImg),e.renderImageCrop.call(this,this.settings.imgCrop))},changeImage:function(i,t){e.reassignActions.call(this),e.setImage.call(this,i,t)},getImgCrop:function(){return this.settings.imgCrop},getFormCrop:function(){return this.settings.formCrop},getUploaderImg:function(){return this.settings.uploaderImg},getPreviewImg:function(){return this.settings.previewImg},destroy:function(){e.destroy.call(this)}},i.fn.imageUploaderCrop=function(s){var e=arguments;if(void 0!==i(this).data("imageUploaderCrop")&&i.isFunction(i(this).data("imageUploaderCrop")[s])){var n=i(this).data("imageUploaderCrop");return n[s].apply(n,t.call(e,1))}if("object"==typeof s||!s)return this.each(function(t,e){var n=new i.imageUploaderCrop(this,s);i(this).data("imageUploaderCrop",n)});i.error('Method "'+s+'" does not exist in imageUploaderCrop - (krobing) plugin!')}});
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImltYWdlLXVwbG9hZGVyLWNyb3AuanMiXSwibmFtZXMiOlsiZmFjdG9yeSIsImRlZmluZSIsImFtZCIsIm1vZHVsZSIsImV4cG9ydHMiLCJyZXF1aXJlIiwialF1ZXJ5IiwiJCIsInNsaWNlIiwiQXJyYXkiLCJwcm90b3R5cGUiLCJkZWZhdWx0cyIsInNwbGljZSIsImZvcm1Dcm9wIiwiYnRuVG9Dcm9wIiwiaW1nQ3JvcCIsInByZXZpZXdJbWciLCJ1cGxvYWRlckltZyIsInRlbXBsYXRlSW1nVXBsb2FkZXIiLCJwcmV2ZW50RHVwbGljaXR5IiwiY29uZmlnSW1nIiwibWF4V2lkdGhJbWciLCJtYXhIZWlnaHRJbWciLCJtaW5XaWR0aEltZyIsIm1pbkhlaWdodEltZyIsImFsbG93ZWRFeHRlbnNpb25zIiwic2l6ZUxpbWl0Iiwic2VuZE9yaWdpbmFsIiwiZGVmYXVsdFF1YWxpdHkiLCJ1cGxvYWRkaW5nIiwiaW5wdXROYW1lIiwiZW5kcG9pbnQiLCJwYXJhbXMiLCJjcm9wcGluZyIsImV4dHJhRHJvcHpvbmVzIiwiY2FsbGJhY2tzIiwib25Dcm9wcGluZyIsImpjcm9wX2ltZyIsIm9uQ3JvcENvbXBsZXRlIiwicmVzcCIsImpxWEhSIiwib25Dcm9wRXJyb3IiLCJlcnJvciIsIm9uTG9hZEltZyIsIiR1cGxvYWRlckltZyIsImlkIiwibmFtZSIsIm9uQ29tcGxldGVMb2FkIiwicmVzIiwibWVzc2FnZXMiLCJzaG93TWVzc2FnZSIsIm1lc3NhZ2UiLCJhbGVydGlmeSIsImFsZXJ0Iiwic2hvd0NvbmZpcm0iLCJwcm9taXNlIiwicXEiLCJQcm9taXNlIiwiY29uZmlybSIsInJlc3VsdCIsInN1Y2Nlc3MiLCJmYWlsdXJlIiwic2hvd1Byb21wdCIsImRlZmF1bHRWYWx1ZSIsInByb21wdCIsImluU3RyIiwibWV0aG9kcyIsInJlYXNzaWduQWN0aW9ucyIsInRoaXMiLCJzZXR0aW5ncyIsIm9mZiIsIm9uIiwib25Db21wbGV0ZUxvYWRJbWciLCJiaW5kIiwic3VibWl0Q3JvcEltYWdlIiwiZGVzdHJveSIsInVuZGVmaW5lZCIsImRhdGEiLCIkZWxlbWVudCIsInJlbW92ZURhdGEiLCJzZXRJbWFnZSIsInVybEltYWdlIiwiY2FsbGJhY2siLCJhdHRyIiwiZXJyIiwiY29uc29sZSIsIl90aGlzIiwiZGltSW1nIiwiZ2V0Qm91bmRzIiwiY2hhbmdlT3B0c0Nyb3AiLCJjYWxsIiwiaW1nU2V0IiwibWluV2lkdGgiLCJtaW5IZWlnaHQiLCJpbWdXaWR0aCIsImltZ0hlaWdodCIsImZpbmQiLCJ2YWwiLCJzcGxpdCIsInJlbmRlckltYWdlQ3JvcCIsImlzRnVuY3Rpb24iLCJyZW5kZXJVcGxvYWRlckltZyIsImhhc093blByb3BlcnR5IiwiZm4iLCJmaW5lVXBsb2FkZXIiLCJkZWJ1ZyIsInRlbXBsYXRlIiwicmVxdWVzdCIsInRodW1ibmFpbHMiLCJwbGFjZWhvbGRlcnMiLCJ3YWl0aW5nUGF0aCIsIm5vdEF2YWlsYWJsZVBhdGgiLCJhdXRvVXBsb2FkIiwibXVsdGlwbGUiLCJ2YWxpZGF0aW9uIiwiaW1hZ2UiLCJtYXhXaWR0aCIsIm1heEhlaWdodCIsInN0b3BPbkZpcnN0SW52YWxpZEZpbGUiLCJpdGVtTGltaXQiLCJzY2FsaW5nIiwib25VcGxvYWQiLCJleHRlbmQiLCJkcmFnQW5kRHJvcCIsIiRpbWdDcm9wIiwiSmNyb3AiLCJvblNlbGVjdCIsInNldENvb3JkcyIsIm9uQ2hhbmdlIiwib25SZWxlYXNlIiwiYmdDb2xvciIsImJnT3BhY2l0eSIsInNldFNlbGVjdCIsImFzcGVjdFJhdGlvIiwiYm94V2lkdGgiLCJwYXJlbnQiLCJ3aWR0aCIsImJveEhlaWdodCIsImFsbG93U2VsZWN0IiwiYWxsb3dSZXNpemUiLCJkaW1EZWZhdWx0Iiwib3B0aW9ucyIsImRpbVNlbGVjdCIsIml4IiwiaXkiLCJtaW5EaW0iLCJNYXRoIiwibWluIiwic2V0U3F1YXJlIiwic2V0T3B0aW9ucyIsInRydWVTaXplIiwiZmxvb3IiLCJlIiwicHJldmVudERlZmF1bHQiLCJzZWxlY3RvciIsIm8iLCJhIiwiaXNQcm90b3R5cGVPZiIsInNlcmlhbGl6ZUFycmF5IiwiZWFjaCIsInB1c2giLCJ2YWx1ZSIsImZvcm1Ub0pzb24iLCJ0YXJnX3ciLCJ0YXJnX2giLCJhZGRDbGFzcyIsInBvc3QiLCJvblN1Y2Nlc3NDcm9wIiwiZmFpbCIsIm9uRXJyb3JDcm9wIiwiY29vcmRzIiwicmF0aW9MZXNzZXIiLCJyeCIsInciLCJyeSIsImgiLCJoZWlnaHQiLCJ4IiwieSIsImNzcyIsInJvdW5kIiwibWFyZ2luTGVmdCIsIm1hcmdpblRvcCIsIiRhcmVhRHJvcCIsImxlbmd0aCIsImhhc0NsYXNzIiwiZXZlbnQiLCJmaWxlX3BhdGgiLCJmaWxlX3dpZHRoIiwiZmlsZV9oZWlnaHQiLCJmaWxlX25hbWUiLCJmaWxlX3R5cGUiLCJzdGF0dXMiLCJyZW1vdmVDbGFzcyIsImltYWdlVXBsb2FkZXJDcm9wIiwiZWxlbWVudCIsImluaXQiLCJjaGFuZ2VJbWFnZSIsImdldEltZ0Nyb3AiLCJnZXRGb3JtQ3JvcCIsImdldFVwbG9hZGVySW1nIiwiZ2V0UHJldmlld0ltZyIsIm9wdHNPckNtZCIsInNlbGZBcmdzIiwiYXJndW1lbnRzIiwicGx1ZyIsImFwcGx5IiwiaW5kZXgiLCJlbCIsInBsdWdpbiJdLCJtYXBwaW5ncyI6IkNBVUEsU0FBQUEsR0FBQSxhQUNBLG1CQUFBQyxRQUFBQSxPQUFBQyxJQUVBRCxRQUFBLFVBQUFELEdBQ0EsaUJBQUFHLFFBQUFBLE9BQUFDLFFBRUFELE9BQUFDLFFBQUFKLEVBQUFLLFFBQUEsV0FHQUwsRUFBQU0sUUFUQSxDQVdBLFNBQUFDLEdBQUEsYUFDQSxJQUFBQyxFQUFBQyxNQUFBQyxVQUFBRixNQUlBRyxHQUhBRixNQUFBQyxVQUFBRSxRQUlBQyxTQUFBLEtBQ0FDLFVBQUEsS0FDQUMsUUFBQSxLQUNBQyxXQUFBLEtBQ0FDLFlBQUEsS0FDQUMsb0JBQUEsR0FDQUMsa0JBQUEsRUFDQUMsV0FDQUMsWUFBQSxFQUNBQyxhQUFBLEVBQ0FDLFlBQUEsRUFDQUMsYUFBQSxFQUNBQyxtQkFBQSxPQUFBLE1BQUEsT0FDQUMsVUFBQSxFQUNBQyxjQUFBLEVBQ0FDLGVBQUEsS0FFQUMsWUFDQUMsVUFBQSxPQUNBQyxTQUFBLEdBQ0FDLFdBRUFDLFVBQ0FGLFNBQUEsR0FDQUMsV0FFQUUsZ0JBQUEzQixFQUFBLHdCQUVBNEIsV0FDQUMsV0FBQSxTQUFBQyxLQUNBQyxlQUFBLFNBQUFELEVBQUFFLEVBQUFDLEtBQ0FDLFlBQUEsU0FBQUosRUFBQUcsRUFBQUUsS0FDQUMsVUFBQSxTQUFBQyxFQUFBQyxFQUFBQyxLQUNBQyxlQUFBLFNBQUFILEVBQUFDLEVBQUFDLEVBQUFFLE1BRUFDLFlBQ0FDLFlBQUEsU0FBQUMsR0FDQSxPQUFBQyxTQUFBQyxNQUFBRixJQUVBRyxZQUFBLFNBQUFILEdBQ0EsSUFBQUksRUFBQSxJQUFBQyxHQUFBQyxRQVFBLE9BUEFMLFNBQUFNLFFBQUFQLEVBQUEsU0FBQVEsR0FDQSxPQUFBQSxFQUNBSixFQUFBSyxRQUFBRCxHQUVBSixFQUFBTSxZQUdBTixHQUVBTyxXQUFBLFNBQUFYLEVBQUFZLEdBQ0EsSUFBQVIsRUFBQSxJQUFBQyxHQUFBQyxRQVNBLE9BUEFMLFNBQUFZLE9BQUFiLEVBQUEsU0FBQVEsRUFBQU0sR0FDQSxPQUFBTixFQUNBSixFQUFBSyxRQUFBSyxHQUVBVixFQUFBTSxRQUFBSSxJQUVBRixHQUNBUixLQTRFQVcsR0FJQUMsZ0JBQUEsV0FDQUMsS0FBQUMsU0FBQXBELFlBQUFxRCxJQUFBLFlBQ0FGLEtBQUFDLFNBQUFwRCxZQUFBc0QsR0FBQSxXQUFBTCxFQUFBTSxrQkFBQUMsS0FBQUwsT0FHQUEsS0FBQUMsU0FBQXZELFdBQ0FzRCxLQUFBQyxTQUFBdkQsVUFBQXdELElBQUEsUUFBQUosRUFBQVEsZ0JBQUFELEtBQUFMLE9BQ0FBLEtBQUFDLFNBQUF2RCxVQUFBeUQsR0FBQSxRQUFBTCxFQUFBUSxnQkFBQUQsS0FBQUwsU0FFQUEsS0FBQUMsU0FBQXhELFNBQUF5RCxJQUFBLFNBQUFKLEVBQUFRLGdCQUFBRCxLQUFBTCxPQUNBQSxLQUFBQyxTQUFBeEQsU0FBQTBELEdBQUEsU0FBQUwsRUFBQVEsZ0JBQUFELEtBQUFMLFNBT0FPLFFBQUEsZ0JBRUFDLElBQUFSLEtBQUFDLFNBQUF0RCxRQUFBOEQsS0FBQSxVQUNBVCxLQUFBL0IsVUFBQXNDLFVBS0FQLEtBQUFDLFNBQUFwRCxZQUFBcUQsSUFBQSxZQUNBRixLQUFBQyxTQUFBeEQsU0FBQXlELElBQUEsVUFHQUYsS0FBQVUsU0FBQUMsV0FBQSxzQkFRQUMsU0FBQSxTQUFBQyxFQUFBQyxHQUNBRCxJQUFBQSxFQUFBYixLQUFBQyxTQUFBdEQsUUFBQW9FLEtBQUEsVUFBQUYsRUFBQSxJQUVBLElBQ0EsSUFBQWIsS0FBQUMsU0FBQXRELFFBQUEsS0FBQSwyQ0FDQSxNQUFBcUUsR0FDQUMsUUFBQTNDLE1BQUEsVUFBQTBDLEVBQUEsS0FHQSxJQUFBRSxFQUFBbEIsVUFHQVEsSUFBQVIsS0FBQUMsU0FBQXRELFFBQUE4RCxLQUFBLFVBQ0FULEtBQUEvQixVQUFBK0IsS0FBQUMsU0FBQXRELFFBQUE4RCxLQUFBLFNBR0FULEtBQUEvQixVQUFBMkMsU0FBQUMsRUFBQSxXQUVBLElBQUFNLEtBR0FBLEVBREFuQixLQUFBQyxTQUFBakQsVUFBQUcsYUFBQTZDLEtBQUFDLFNBQUFqRCxVQUFBSSxjQUNBNEMsS0FBQUMsU0FBQWpELFVBQUFHLFlBQUE2QyxLQUFBQyxTQUFBakQsVUFBQUksY0FFQTRDLEtBQUEvQixVQUFBbUQsWUFHQXRCLEVBQUF1QixlQUFBQyxLQUFBSixHQUNBSyxPQUFBVixFQUNBVyxTQUFBTixFQUFBakIsU0FBQWpELFVBQUFHLFlBQ0FzRSxVQUFBUCxFQUFBakIsU0FBQWpELFVBQUFJLGFBQ0FzRSxTQUFBUCxFQUFBLEdBQ0FRLFVBQUFSLEVBQUEsS0FJQUQsRUFBQWpCLFNBQUF4RCxTQUFBbUYsS0FBQSxtQkFBQUMsSUFBQSxPQUNBWCxFQUFBakIsU0FBQXhELFNBQUFtRixLQUFBLG1CQUFBQyxJQUFBaEIsR0FDQUssRUFBQWpCLFNBQUF4RCxTQUFBbUYsS0FBQSxtQkFBQUMsSUFBQWhCLEVBQUFpQixNQUFBLEtBQUExRixPQUFBLFFBS0E0RCxLQUFBQyxTQUFBdEQsUUFBQW9FLEtBQUEsTUFBQUYsR0FHQWYsRUFBQWlDLGdCQUFBVCxLQUFBdEIsS0FBQUEsS0FBQUMsU0FBQXRELFFBQUEsV0FFQSxJQUFBd0UsS0FHQUEsRUFEQW5CLEtBQUFDLFNBQUFqRCxVQUFBRyxhQUFBNkMsS0FBQUMsU0FBQWpELFVBQUFJLGNBQ0E0QyxLQUFBQyxTQUFBakQsVUFBQUcsWUFBQTZDLEtBQUFDLFNBQUFqRCxVQUFBSSxjQUVBNEMsS0FBQS9CLFVBQUFtRCxZQUdBdEIsRUFBQXVCLGVBQUFDLEtBQUF0QixNQUNBdUIsT0FBQVYsRUFDQVcsU0FBQXhCLEtBQUFDLFNBQUFqRCxVQUFBRyxZQUNBc0UsVUFBQXpCLEtBQUFDLFNBQUFqRCxVQUFBSSxhQUNBc0UsU0FBQVAsRUFBQSxHQUNBUSxVQUFBUixFQUFBLEtBSUFuQixLQUFBQyxTQUFBeEQsU0FBQW1GLEtBQUEsbUJBQUFDLElBQUEsT0FDQTdCLEtBQUFDLFNBQUF4RCxTQUFBbUYsS0FBQSxtQkFBQUMsSUFBQWhCLEdBQ0FiLEtBQUFDLFNBQUF4RCxTQUFBbUYsS0FBQSxtQkFBQUMsSUFBQWhCLEVBQUFpQixNQUFBLEtBQUExRixPQUFBLEtBRUFpRSxLQUFBTCxRQUlBN0QsRUFBQTZGLFdBQUFsQixJQUNBQSxFQUFBUSxRQU9BVyxrQkFBQSxTQUFBekQsR0FFQSxPQS9JQTBELGVBQUFaLEtBQUFuRixFQUFBZ0csR0FBQSxnQkFpSkEsT0FEQWxCLFFBQUEzQyxNQUFBLDZGQUNBLEVBS0FFLEVBQUE0RCxjQUNBQyxPQUFBLEVBQ0FDLFNBQUF0QyxLQUFBQyxTQUFBbkQsb0JBQ0F5RixRQUFBdkMsS0FBQUMsU0FBQXhDLFdBQ0ErRSxZQUNBQyxjQUNBQyxZQUFBLDBCQUNBQyxpQkFBQSxrQ0FHQUMsWUFBQSxFQUNBQyxVQUFBLEVBQ0FDLFlBQ0FDLE9BR0FDLFNBQUFoRCxLQUFBQyxTQUFBakQsVUFBQUMsYUFBQVYsRUFBQVMsVUFBQUMsWUFDQWdHLFVBQUFqRCxLQUFBQyxTQUFBakQsVUFBQUUsY0FBQVgsRUFBQVMsVUFBQUUsY0FFQUcsa0JBQUEyQyxLQUFBQyxTQUFBakQsVUFBQUssbUJBQUFkLEVBQUFTLFVBQUFLLGtCQUNBQyxVQUFBMEMsS0FBQUMsU0FBQWpELFVBQUFNLFdBQUFmLEVBQUFTLFVBQUFNLFVBQ0E0Rix3QkFBQSxFQUNBQyxVQUFBLEdBRUFDLFNBQ0E3RixhQUFBeUMsS0FBQUMsU0FBQWpELFVBQUFPLGNBQUFoQixFQUFBUyxVQUFBTyxhQUNBQyxlQUFBd0MsS0FBQUMsU0FBQWpELFVBQUFRLGdCQUFBakIsRUFBQVMsVUFBQVEsZ0JBR0FPLFdBQ0FzRixTQUFBdkQsRUFBQXZCLFVBQUE4QixLQUFBTCxPQUVBbkIsU0FBQTFDLEVBQUFtSCxVQUFBdEQsS0FBQUMsU0FBQXBCLFVBQ0EwRSxhQUNBekYsZUFBQWtDLEtBQUFDLFNBQUFuQyxnQkFFQWdCLFlBQUFrQixLQUFBQyxTQUFBbkIsWUFDQUksWUFBQWMsS0FBQUMsU0FBQWYsWUFDQVEsV0FBQU0sS0FBQUMsU0FBQVAsY0FTQXFDLGdCQUFBLFNBQUF5QixFQUFBMUMsR0FFQSxPQTdMQW9CLGVBQUFaLEtBQUFuRixFQUFBZ0csR0FBQSxTQStMQSxPQURBbEIsUUFBQTNDLE1BQUEsbUZBQ0EsRUFJQSxJQUFBNEMsRUFBQWxCLEtBRUF3RCxFQUFBQyxPQUNBQyxTQUFBNUQsRUFBQTZELFVBQUF0RCxLQUFBTCxNQUNBNEQsU0FBQTlELEVBQUE2RCxVQUFBdEQsS0FBQUwsTUFDQTZELFVBQUEsYUFJQUMsUUFBQSxRQUNBQyxVQUFBLEdBQ0FDLFdBQUEsRUFBQSxFQUFBaEUsS0FBQUMsU0FBQWpELFVBQUFHLFlBQUE2QyxLQUFBQyxTQUFBakQsVUFBQUksY0FDQTZHLFlBQUFqRSxLQUFBQyxTQUFBakQsVUFBQUcsWUFBQTZDLEtBQUFDLFNBQUFqRCxVQUFBSSxhQUNBOEcsU0FBQVYsRUFBQVcsU0FBQUMsUUFDQUMsVUFBQSxFQUNBQyxhQUFBLEVBQ0FDLGFBQUEsR0FFQSxXQUNBckQsRUFBQWpELFVBQUErQixLQUVBLElBQUF3RSxFQUFBdEQsRUFBQWpELFVBQUFtRCxZQUVBdEIsRUFBQXVCLGVBQUFDLEtBQUFKLEdBQ0FLLE9BQUFpQyxFQUFBekMsS0FBQSxPQUNBUyxTQUFBTixFQUFBakIsU0FBQWpELFVBQUFHLFlBQ0FzRSxVQUFBUCxFQUFBakIsU0FBQWpELFVBQUFJLGFBQ0FzRSxTQUFBOEMsRUFBQSxHQUNBN0MsVUFBQTZDLEVBQUEsS0FHQSxtQkFBQTFELEdBQ0FBLEVBQUFRLFVBVUFELGVBQUEsU0FBQW9ELEVBQUEzRCxHQUVBLElBQUFiLEdBQ0FzQixPQUFBLEdBQ0FDLFNBQUEsRUFDQUMsVUFBQSxFQUNBQyxTQUFBLEVBQ0FDLFVBQUEsRUFDQStDLFdBQUEsRUFBQSxHQUNBQyxHQUFBLEVBQ0FDLEdBQUEsR0FHQXpJLEVBQUFtSCxPQUFBckQsRUFBQXdFLEdBR0F4RSxFQUFBeUUsVUFwUkEsU0FBQWhELEVBQUFDLEdBQ0EsSUFBQWtELEVBQUFDLEtBQUFDLElBQUFyRCxFQUFBQyxHQUVBLE9BQUFELEdBQUFDLEdBQ0FELEVBQUFDLElBR0FrRCxFQUFBQSxHQTZRQUcsQ0FBQS9FLEVBQUF5QixTQUFBekIsRUFBQTBCLFdBQ0ExQixFQUFBMEUsSUFBQTFFLEVBQUF5QixTQUFBekIsRUFBQXlFLFVBQUEsSUFBQSxFQUdBMUUsS0FBQS9CLFVBQUFnSCxZQUNBQyxVQUFBSixLQUFBSyxNQUFBbEYsRUFBQXlCLFVBQUFvRCxLQUFBSyxNQUFBbEYsRUFBQTBCLGNBSUEzQixLQUFBQyxTQUFBckQsV0FBQW1FLEtBQUEsTUFBQWQsRUFBQXNCLFFBRUF2QixLQUFBL0IsVUFBQStGLFdBQUEvRCxFQUFBMEUsR0FBQTFFLEVBQUEyRSxHQUFBM0UsRUFBQXlFLFVBQUEsR0FBQXpFLEVBQUF5RSxVQUFBLEtBR0EsbUJBQUE1RCxHQUNBQSxFQUFBUSxRQU9BaEIsZ0JBQUEsU0FBQThFLEdBQ0FBLEVBQUFDLGlCQUVBLElBRUE1RSxFQTlVQSxTQUFBNkUsR0FFQSxJQUFBQyxLQUFBQyxLQXFCQSxPQW5CQUEsRUFEQXJKLEVBQUFHLFVBQUFtSixjQUFBSCxHQUNBQSxFQUFBSSxpQkFHQXZKLEVBQUFtSixHQUFBSSxpQkFHQXZKLEVBQUF3SixLQUFBSCxFQUFBLGdCQUNBaEYsSUFBQStFLEVBQUF2RixLQUFBdEIsT0FDQTZHLEVBQUF2RixLQUFBdEIsTUFBQWtILE9BQ0FMLEVBQUF2RixLQUFBdEIsT0FBQTZHLEVBQUF2RixLQUFBdEIsUUFHQTZHLEVBQUF2RixLQUFBdEIsTUFBQWtILEtBQUE1RixLQUFBNkYsT0FBQSxLQUdBTixFQUFBdkYsS0FBQXRCLE1BQUFzQixLQUFBNkYsT0FBQSxLQUlBTixFQXVUQU8sQ0FBQTlGLEtBQUFDLFNBQUF4RCxVQUNBZ0UsRUFBQXNGLE9BQUEvRixLQUFBQyxTQUFBakQsVUFBQUcsWUFDQXNELEVBQUF1RixPQUFBaEcsS0FBQUMsU0FBQWpELFVBQUFJLGFBRUFqQixFQUFBbUgsT0FBQTdDLEVBQUFULEtBQUFDLFNBQUFwQyxTQUFBRCxRQUdBekIsRUFBQTZGLFdBQUFoQyxLQUFBQyxTQUFBbEMsVUFBQSxhQUNBaUMsS0FBQUMsU0FBQWxDLFVBQUEsV0FBQXVELEtBQUF0QixLQUFBQSxLQUFBL0IsV0FFQStCLEtBQUFDLFNBQUF4RCxTQUFBbUYsS0FBQSxXQUFBcUUsU0FBQSxZQUVBOUosRUFBQStKLEtBQUFsRyxLQUFBQyxTQUFBcEMsU0FBQUYsU0FBQThDLEVBQUFYLEVBQUFxRyxjQUFBOUYsS0FBQUwsT0FDQW9HLEtBQUF0RyxFQUFBdUcsWUFBQWhHLEtBQUFMLFFBVUEyRCxVQUFBLFNBQUEyQyxHQUVBLElBQUFDLEVBQUF2RyxLQUFBQyxTQUFBakQsVUFBQUksYUFBQTRDLEtBQUFDLFNBQUFqRCxVQUFBRyxZQUNBZ0UsRUFBQSxPQUFBbkIsS0FBQS9CLFdBQUErQixLQUFBL0IsVUFBQW1ELFlBQ0FvRixFQUFBckssRUFBQTZELEtBQUFDLFNBQUFyRCxXQUFBdUgsU0FBQSxJQUFBQyxRQUFBa0MsRUFBQUcsRUFDQUMsRUFBQUgsRUFBQXBLLEVBQUE2RCxLQUFBQyxTQUFBckQsV0FBQXVILFNBQUEsSUFBQUMsUUFBQWtDLEVBQUFLLEVBR0EzRyxLQUFBQyxTQUFBckQsV0FBQW1FLEtBQUEsUUFDQTVFLEVBQUE2RCxLQUFBQyxTQUFBckQsV0FBQXVILFNBQUEsSUFBQXlDLE9BQUFMLEVBQUFwSyxFQUFBNkQsS0FBQUMsU0FBQXJELFdBQUF1SCxTQUFBLElBQUFDLFNBR0FwRSxLQUFBQyxTQUFBeEQsU0FBQW1GLEtBQUEsZ0JBQUFDLElBQUF5RSxFQUFBTyxHQUNBN0csS0FBQUMsU0FBQXhELFNBQUFtRixLQUFBLGdCQUFBQyxJQUFBeUUsRUFBQVEsR0FDQTlHLEtBQUFDLFNBQUF4RCxTQUFBbUYsS0FBQSxnQkFBQUMsSUFBQXlFLEVBQUFHLEdBQ0F6RyxLQUFBQyxTQUFBeEQsU0FBQW1GLEtBQUEsZ0JBQUFDLElBQUF5RSxFQUFBSyxHQUdBeEYsR0FDQW5CLEtBQUFDLFNBQUFyRCxXQUFBbUssS0FDQTNDLE1BQUFVLEtBQUFrQyxNQUFBUixFQUFBckYsRUFBQSxJQUFBLEtBQ0F5RixPQUFBOUIsS0FBQWtDLE1BQUFOLEVBQUF2RixFQUFBLElBQUEsS0FDQUssU0FBQXNELEtBQUFrQyxNQUFBUixFQUFBckYsRUFBQSxJQUFBLEtBQ0FNLFVBQUFxRCxLQUFBa0MsTUFBQU4sRUFBQXZGLEVBQUEsSUFBQSxLQUNBOEYsV0FBQSxJQUFBbkMsS0FBQWtDLE1BQUFSLEVBQUFGLEVBQUFPLEdBQUEsS0FDQUssVUFBQSxJQUFBcEMsS0FBQWtDLE1BQUFOLEVBQUFKLEVBQUFRLEdBQUEsUUFVQXZJLFVBQUEsU0FBQUUsRUFBQUMsR0FFQSxJQUFBeUksRUFBQW5ILEtBQUFDLFNBQUFwRCxZQUFBdUYsYUFBQSxnQkFBQTNELFFBR0ErQixJQUFBMkcsR0FBQUEsRUFBQUMsU0FDQUQsRUFBQUUsU0FBQSxvQkFBQUYsRUFBQUUsU0FBQSx5QkFFQXZILEVBQUFDLGdCQUFBdUIsS0FBQXRCLE1BQ0FGLEVBQUFjLFNBQUFVLEtBQUF0QixPQUlBN0QsRUFBQTZGLFdBQUFoQyxLQUFBQyxTQUFBbEMsVUFBQSxZQUNBaUMsS0FBQUMsU0FBQWxDLFVBQUEsVUFBQXVELEtBQUF0QixLQUFBQSxLQUFBQyxTQUFBcEQsWUFBQTRCLEVBQUFDLElBV0EwQixrQkFBQSxTQUFBa0gsRUFBQTdJLEVBQUFDLEVBQUFFLEdBSUFBLEVBQUFZLGVBSUFnQixJQUFBUixLQUFBQyxTQUFBdEQsUUFBQThELEtBQUEsU0FFQVQsS0FBQS9CLFVBQUEyQyxTQUFBaEMsRUFBQTJJLFVBQUEsV0FFQTNJLEVBQUE0SSxXQUFBNUksRUFBQTZJLFlBRUEzSCxFQUFBdUIsZUFBQUMsS0FBQXRCLE1BQ0F1QixPQUFBM0MsRUFBQTJJLFVBQ0EvRixTQUFBeEIsS0FBQUMsU0FBQWpELFVBQUFHLFlBQ0FzRSxVQUFBekIsS0FBQUMsU0FBQWpELFVBQUFJLGFBQ0FzRSxTQUFBOUMsRUFBQTRJLFdBQ0E3RixVQUFBL0MsRUFBQTZJLGFBRUEsV0FFQXRMLEVBQUE2RixXQUFBaEMsS0FBQUMsU0FBQWxDLFVBQUEsaUJBQ0FpQyxLQUFBQyxTQUFBbEMsVUFBQSxlQUFBdUQsS0FBQXRCLEtBQUFBLEtBQUFDLFNBQUFwRCxZQUFBNEIsRUFBQUMsRUFBQUUsSUFDQXlCLEtBQUFMLFFBRUFLLEtBQUFMLFFBSUFBLEtBQUFDLFNBQUF0RCxRQUFBb0UsS0FBQSxNQUFBbkMsRUFBQTJJLFdBRUF6SCxFQUFBaUMsZ0JBQUFULEtBQUF0QixLQUFBQSxLQUFBQyxTQUFBdEQsUUFBQSxXQUVBbUQsRUFBQXVCLGVBQUFDLEtBQUF0QixNQUNBdUIsT0FBQTNDLEVBQUEySSxVQUNBL0YsU0FBQXhCLEtBQUFDLFNBQUFqRCxVQUFBRyxZQUNBc0UsVUFBQXpCLEtBQUFDLFNBQUFqRCxVQUFBSSxhQUNBc0UsU0FBQTlDLEVBQUE0SSxXQUNBN0YsVUFBQS9DLEVBQUE2SSxhQUNBLFdBRUF0TCxFQUFBNkYsV0FBQWhDLEtBQUFDLFNBQUFsQyxVQUFBLGlCQUNBaUMsS0FBQUMsU0FBQWxDLFVBQUEsZUFBQXVELEtBQUF0QixLQUFBQSxLQUFBQyxTQUFBcEQsWUFBQTRCLEVBQUFDLEVBQUFFLElBRUF5QixLQUFBTCxRQUVBSyxLQUFBTCxRQUlBQSxLQUFBQyxTQUFBeEQsU0FBQW1GLEtBQUEsbUJBQUFDLElBQUEsUUFDQTdCLEtBQUFDLFNBQUF4RCxTQUFBbUYsS0FBQSxtQkFBQUMsSUFBQWpELEVBQUE4SSxXQUNBMUgsS0FBQUMsU0FBQXhELFNBQUFtRixLQUFBLG1CQUFBQyxJQUFBakQsRUFBQStJLGFBU0F4QixjQUFBLFNBQUFoSSxFQUFBeUosRUFBQXhKLEdBRUE0QixLQUFBQyxTQUFBeEQsU0FBQW1GLEtBQUEsV0FBQWlHLFlBQUEsWUFHQTFMLEVBQUE2RixXQUFBaEMsS0FBQUMsU0FBQWxDLFVBQUEsaUJBQ0FpQyxLQUFBQyxTQUFBbEMsVUFBQSxlQUFBdUQsS0FBQXRCLEtBQUFBLEtBQUEvQixVQUFBRSxFQUFBQyxJQVVBaUksWUFBQSxTQUFBakksRUFBQXdKLEVBQUF0SixHQUVBMEIsS0FBQUMsU0FBQXhELFNBQUFtRixLQUFBLFdBQUFpRyxZQUFBLFlBR0ExTCxFQUFBNkYsV0FBQWhDLEtBQUFDLFNBQUFsQyxVQUFBLGNBQ0FpQyxLQUFBQyxTQUFBbEMsVUFBQSxZQUFBdUQsS0FBQXRCLEtBQUFBLEtBQUEvQixVQUFBRyxFQUFBRSxLQVFBbkMsRUFBQTJMLGtCQUFBLFNBQUFDLEVBQUF0RCxHQUNBQSxJQUFBQSxNQU1BekUsS0FBQS9CLFVBQUEsS0FDQStCLEtBQUErSCxRQUFBQSxFQUNBL0gsS0FBQVUsU0FBQXZFLEVBQUE0TCxHQUdBNUwsRUFBQTZGLFdBUkFoQyxLQVFBZ0ksT0FSQWhJLEtBU0FnSSxLQUFBRCxFQUFBdEQsSUFJQXRJLEVBQUEyTCxrQkFBQXhMLFdBR0EyRCxZQUtBK0gsS0FBQSxTQUFBRCxFQUFBdEQsR0FFQXpFLEtBQUFDLFNBQUE5RCxFQUFBbUgsVUFBQS9HLEVBQUFrSSxHQUdBekUsS0FBQUMsU0FBQXRELGNBQUE2RCxJQUFBUixLQUFBQyxTQUFBdEQsUUFBQThELEtBQUEsV0FDQVQsS0FBQS9CLFVBQUErQixLQUFBQyxTQUFBdEQsUUFBQThELEtBQUEsU0FDQVQsS0FBQS9CLFVBQUFzQyxXQUdBUCxLQUFBQyxTQUFBbEQsbUJBRUErQyxFQUFBQyxnQkFBQXVCLEtBQUF0QixNQUNBRixFQUFBbUMsa0JBQUFYLEtBQUF0QixLQUFBQSxLQUFBQyxTQUFBcEQsYUFDQWlELEVBQUFpQyxnQkFBQVQsS0FBQXRCLEtBQUFBLEtBQUFDLFNBQUF0RCxXQWVBc0wsWUFBQSxTQUFBcEgsRUFBQUMsR0FDQWhCLEVBQUFDLGdCQUFBdUIsS0FBQXRCLE1BQ0FGLEVBQUFjLFNBQUFVLEtBQUF0QixLQUFBYSxFQUFBQyxJQU1Bb0gsV0FBQSxXQUNBLE9BQUFsSSxLQUFBQyxTQUFBdEQsU0FNQXdMLFlBQUEsV0FDQSxPQUFBbkksS0FBQUMsU0FBQXhELFVBTUEyTCxlQUFBLFdBQ0EsT0FBQXBJLEtBQUFDLFNBQUFwRCxhQU1Bd0wsY0FBQSxXQUNBLE9BQUFySSxLQUFBQyxTQUFBckQsWUFNQTJELFFBQUEsV0FDQVQsRUFBQVMsUUFBQWUsS0FBQXRCLFFBSUE3RCxFQUFBZ0csR0FBQTJGLGtCQUFBLFNBQUFRLEdBQ0EsSUFBQUMsRUFBQUMsVUFFQSxRQUFBaEksSUFBQXJFLEVBQUE2RCxNQUFBUyxLQUFBLHNCQUFBdEUsRUFBQTZGLFdBQUE3RixFQUFBNkQsTUFBQVMsS0FBQSxxQkFBQTZILElBQUEsQ0FFQSxJQUFBRyxFQUFBdE0sRUFBQTZELE1BQUFTLEtBQUEscUJBQ0EsT0FBQWdJLEVBQUFILEdBQUFJLE1BQUFELEVBQUFyTSxFQUFBa0YsS0FBQWlILEVBQUEsSUFFQSxHQUFBLGlCQUFBRCxJQUFBQSxFQUVBLE9BQUF0SSxLQUFBMkYsS0FBQSxTQUFBZ0QsRUFBQUMsR0FFQSxJQUFBQyxFQUFBLElBQUExTSxFQUFBMkwsa0JBQUE5SCxLQUFBc0ksR0FFQW5NLEVBQUE2RCxNQUFBUyxLQUFBLG9CQUFBb0ksS0FJQTFNLEVBQUFtQyxNQUFBLFdBQUFnSyxFQUFBIiwiZmlsZSI6ImltYWdlLXVwbG9hZGVyLWNyb3AubWluLmpzIiwic291cmNlc0NvbnRlbnQiOlsiLy8gaW1hZ2UtdXBsb2FkZXItY3JvcCB2MC4xLjEgZm9yIGpRdWVyeSB0aGF0IHVzZXMgZmluZS11cGxvYWRlciwgamNyb3Bcbi8vIChjKSAyMDE3LCBNSVQgbGljZW5zZWQuIGh0dHA6Ly90dXByb3llY3RvLmNvbVxuLy8gPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cbi8vIERlcGVuZGVuY2llczogalF1ZXJ5LCBmaW5lLXVwbG9hZGVyLCBqY3JvcFxuLy8gQXV0aG9yOiBUdVByb3llY3RvLmNvbVxuLy8gRGV2ZWxvcGVyOiBAa3JvYmluZ1xuLy8gQ3JlYXRlZDogMDQvMDMvMjAxNlxuLy8gV2Vic2l0ZTogaHR0cDovL3R1cHJveWVjdG8uY29tXG4vLyBEZXNjcmlwdGlvbjogY3JvcHBlciBhbmQgdXBsb2FkZXIgb2YgaW1hZ2VzIHRoYXQgdXNlcyBhbm90aGVyIGxpYnJhcmllc1xuXG4hKGZ1bmN0aW9uIChmYWN0b3J5KSB7ICd1c2Ugc3RyaWN0J1xuXHRpZiAodHlwZW9mIGRlZmluZSA9PT0gJ2Z1bmN0aW9uJyAmJiBkZWZpbmUuYW1kKSB7XG5cdFx0Ly8gQU1ELiBSZWdpc3RlciBhcyBhbiBhbm9ueW1vdXMgbW9kdWxlLlxuXHRcdGRlZmluZShbJ2pxdWVyeSddLCBmYWN0b3J5KTtcblx0fSBlbHNlIGlmICh0eXBlb2YgbW9kdWxlID09PSAnb2JqZWN0JyAmJiBtb2R1bGUuZXhwb3J0cykge1xuXHRcdC8vIE5vZGUvQ29tbW9uSlNcblx0XHRtb2R1bGUuZXhwb3J0cyA9IGZhY3RvcnkocmVxdWlyZSgnanF1ZXJ5JykpO1xuXHR9IGVsc2Uge1xuXHRcdC8vIEJyb3dzZXIgZ2xvYmFsc1xuXHRcdGZhY3RvcnkoalF1ZXJ5KTtcblx0fVxufShmdW5jdGlvbiAoJCkgeyAndXNlIHN0cmljdCc7XG5cdHZhciBzbGljZSA9IEFycmF5LnByb3RvdHlwZS5zbGljZTsgLy8gc2F2ZSByZWYgdG8gb3JpZ2luYWwgc2xpY2UoKVxuXHR2YXIgc3BsaWNlID0gQXJyYXkucHJvdG90eXBlLnNwbGljZTsgLy8gc2F2ZSByZWYgdG8gb3JpZ2luYWwgc2xpY2UoKVxuXG5cdC8vIGRlZmF1bHQgb3B0aW9uc1xuXHR2YXIgZGVmYXVsdHMgPSB7XG5cdFx0Zm9ybUNyb3A6IG51bGwsXG5cdFx0YnRuVG9Dcm9wOiBudWxsLFxuXHRcdGltZ0Nyb3A6IG51bGwsXG5cdFx0cHJldmlld0ltZzogbnVsbCxcblx0XHR1cGxvYWRlckltZzogbnVsbCxcblx0XHR0ZW1wbGF0ZUltZ1VwbG9hZGVyOiAnJyxcblx0XHRwcmV2ZW50RHVwbGljaXR5OiBmYWxzZSxcblx0XHRjb25maWdJbWc6IHtcblx0XHRcdG1heFdpZHRoSW1nIDogMCwgLy8gNjQ2ICogMlxuXHRcdFx0bWF4SGVpZ2h0SW1nIDogMCwgLy8gMzc0ICogMlxuXHRcdFx0bWluV2lkdGhJbWcgOiAwLFxuXHRcdFx0bWluSGVpZ2h0SW1nIDogMCxcblx0XHRcdGFsbG93ZWRFeHRlbnNpb25zOiBbJ2pwZWcnLCAnanBnJywgJ3BuZyddLFxuXHRcdFx0c2l6ZUxpbWl0OiAwLCAvLyA1MCBrQiA9IDUwICogMTAyNCBieXRlcyxcblx0XHRcdHNlbmRPcmlnaW5hbDogdHJ1ZSwgLy8gc2VuZCBpbWFnZXMgb3JpZ2luYWwgaW4gdHJ1ZVxuXHRcdFx0ZGVmYXVsdFF1YWxpdHk6IDEwMCAvLyBxdWFsaXR5IG9mIHRoZSBpbWFnZSwgcmFuZ2UoIDEgLSAxMDAgKVxuXHRcdH0sXG5cdFx0dXBsb2FkZGluZzoge1xuXHRcdFx0aW5wdXROYW1lOiAnZmlsZScsXG5cdFx0XHRlbmRwb2ludDogJycsXG5cdFx0XHRwYXJhbXM6IHt9XG5cdFx0fSxcblx0XHRjcm9wcGluZzoge1xuXHRcdFx0ZW5kcG9pbnQ6ICcnLFxuXHRcdFx0cGFyYW1zOiB7fVxuXHRcdH0sXG5cdFx0ZXh0cmFEcm9wem9uZXM6IFskKCcjd3JhcHBlci1pbWFnZS1jcm9wJyldLFxuXHRcdC8vIEV2ZW50cyBoYW5kbGVyc1xuXHRcdGNhbGxiYWNrczoge1xuXHRcdFx0b25Dcm9wcGluZzogZnVuY3Rpb24gKGpjcm9wX2ltZykge30sXG5cdFx0XHRvbkNyb3BDb21wbGV0ZTogZnVuY3Rpb24gKGpjcm9wX2ltZywgcmVzcCwganFYSFIpIHt9LFxuXHRcdFx0b25Dcm9wRXJyb3I6IGZ1bmN0aW9uIChqY3JvcF9pbWcsIGpxWEhSLCBlcnJvcikge30sXG5cdFx0XHRvbkxvYWRJbWc6IGZ1bmN0aW9uICgkdXBsb2FkZXJJbWcsIGlkLCBuYW1lKSB7fSxcblx0XHRcdG9uQ29tcGxldGVMb2FkOiBmdW5jdGlvbiAoJHVwbG9hZGVySW1nLCBpZCwgbmFtZSwgcmVzKSB7fVxuXHRcdH0sXG4gICAgICAgIG1lc3NhZ2VzOiB7fSxcblx0XHRzaG93TWVzc2FnZTogZnVuY3Rpb24gKG1lc3NhZ2UpIHtcblx0XHRcdHJldHVybiBhbGVydGlmeS5hbGVydChtZXNzYWdlKTtcblx0XHR9LFxuXHRcdHNob3dDb25maXJtOiBmdW5jdGlvbiAobWVzc2FnZSkge1xuXHRcdFx0dmFyIHByb21pc2UgPSBuZXcgcXEuUHJvbWlzZSgpO1xuXHRcdFx0YWxlcnRpZnkuY29uZmlybShtZXNzYWdlLCBmdW5jdGlvbihyZXN1bHQpIHtcblx0XHRcdFx0aWYgKHJlc3VsdCkge1xuXHRcdFx0XHRcdHJldHVybiBwcm9taXNlLnN1Y2Nlc3MocmVzdWx0KTtcblx0XHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0XHRyZXR1cm4gcHJvbWlzZS5mYWlsdXJlKCk7XG5cdFx0XHRcdH1cblx0XHRcdH0pO1xuXHRcdFx0cmV0dXJuIHByb21pc2U7XG5cdFx0fSxcblx0XHRzaG93UHJvbXB0OiBmdW5jdGlvbiAobWVzc2FnZSwgZGVmYXVsdFZhbHVlKSB7XG5cdFx0XHR2YXIgcHJvbWlzZSA9IG5ldyBxcS5Qcm9taXNlKCk7XG5cblx0XHRcdGFsZXJ0aWZ5LnByb21wdChtZXNzYWdlLCBmdW5jdGlvbihyZXN1bHQsIGluU3RyKSB7XG5cdFx0XHRcdGlmIChyZXN1bHQpIHtcblx0XHRcdFx0XHRyZXR1cm4gcHJvbWlzZS5zdWNjZXNzKGluU3RyKTtcblx0XHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0XHRyZXR1cm4gcHJvbWlzZS5mYWlsdXJlKGluU3RyKTtcblx0XHRcdFx0fVxuXHRcdFx0fSwgZGVmYXVsdFZhbHVlKTtcblx0XHRcdHJldHVybiBwcm9taXNlO1xuXHRcdH1cblx0fTtcblxuXHQvLyA9PT09PT09PT09PT09PVxuXHQvLyBoZWxwZXJzIG1ldGhvZFxuXHQvLyA9PT09PT09PT09PT09PVxuXHQvKipcblx0KiAgU2VyaWFsaXplIGZvcm0gaW50byBqc29uIGZvcm1hdFxuXHQqICBAcGFyYW0geyBzdHJpbmcgfSBuYW1lIGNsYXNzIG9yIGlkIG9mIHRoZSBodG1sIGVsZW1lbnQgdG8gZW1iZWQgdGhlIGxvYWRlclxuXHQqICBAcmV0dXJuIHsgb2JqZWN0IH0gZm9ybSBpbnRvIGpzb25cblx0Ki9cblx0ZnVuY3Rpb24gZm9ybVRvSnNvbiAoIHNlbGVjdG9yICl7XG5cblx0XHR2YXIgbyA9IHt9LCBhID0gW107XG5cdFx0aWYoICQucHJvdG90eXBlLmlzUHJvdG90eXBlT2Yoc2VsZWN0b3IpICl7XG5cdFx0XHRhID0gc2VsZWN0b3Iuc2VyaWFsaXplQXJyYXkoKTtcblx0XHR9XG5cdFx0ZWxzZXtcblx0XHRcdGEgPSAkKHNlbGVjdG9yKS5zZXJpYWxpemVBcnJheSgpO1xuXHRcdH1cblxuXHRcdCQuZWFjaCggYSwgZnVuY3Rpb24oKSB7XG5cdFx0XHRpZiAoIG9bIHRoaXMubmFtZSBdICE9PSB1bmRlZmluZWQgKSB7XG5cdFx0XHRcdGlmICggISBvW3RoaXMubmFtZV0ucHVzaCApIHtcblx0XHRcdFx0XHRvWyB0aGlzLm5hbWUgXSA9IFsgb1sgdGhpcy5uYW1lIF0gXTtcblx0XHRcdFx0fVxuXG5cdFx0XHRcdG9bIHRoaXMubmFtZSBdLnB1c2goIHRoaXMudmFsdWUgfHwgJycgKTtcblxuXHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0b1sgdGhpcy5uYW1lIF0gPSB0aGlzLnZhbHVlIHx8ICcnO1xuXHRcdFx0fVxuXHRcdH0pO1xuXG5cdFx0cmV0dXJuIG87XG5cdH1cblxuXHQvKipcblx0KiBTZXQgc2VsZWN0IG9uIGltYWdlIGNyb3Bcblx0KiBAcGFyYW0gTnVtYmVyIGltZ1dpZHRoXG5cdCogQHBhcmFtIE51bWJlciBpbWdIZWlnaHRcblx0Ki9cblx0ZnVuY3Rpb24gc2V0U3F1YXJlIChpbWdXaWR0aCwgaW1nSGVpZ2h0KSB7XG5cdFx0dmFyIG1pbkRpbSA9IE1hdGgubWluKGltZ1dpZHRoLCBpbWdIZWlnaHQpO1xuXG5cdFx0aWYoIGltZ1dpZHRoID09IGltZ0hlaWdodCApe1xuXHRcdFx0cmV0dXJuIFtpbWdXaWR0aCwgaW1nSGVpZ2h0XTtcblx0XHR9XG5cblx0XHRyZXR1cm4gW21pbkRpbSwgbWluRGltXTtcblx0fVxuXG5cdC8vIGNoZWNrIG91dCBpZiBleGl0cyBqUXVlcnkgcGx1Z2luIGZpbmV1cGxvYWRlclxuXHRmdW5jdGlvbiBleGlzdFVwbG9hZGVyUGx1Z2luICgpIHtcblxuXHRcdGlmKCAoe30pLmhhc093blByb3BlcnR5LmNhbGwoJC5mbiwgJ2ZpbmVVcGxvYWRlcicpICl7XG5cdFx0XHRyZXR1cm4gdHJ1ZTtcblx0XHR9ZWxzZSB7XG5cdFx0XHRyZXR1cm4gZmFsc2U7XG5cdFx0fVxuXHR9XG5cblx0Ly8gY2hlY2sgb3V0IGlmIGV4aXRzIGpRdWVyeSBwbHVnaW4gamNyb3Bcblx0ZnVuY3Rpb24gZXhpc3RDcm9wUGx1Z2luICgpIHtcblxuXHRcdGlmKCAoe30pLmhhc093blByb3BlcnR5LmNhbGwoJC5mbiwgJ0pjcm9wJykgKXtcblx0XHRcdHJldHVybiB0cnVlO1xuXHRcdH1lbHNlIHtcblx0XHRcdHJldHVybiBmYWxzZTtcblx0XHR9XG5cdH1cblxuXHQvKipcblx0KiBwcml2YXRlcyBtZXRob2RzXG5cdCovXG5cdHZhciBtZXRob2RzID0ge1xuXHRcdC8qKlxuXHRcdCogcmVhc3NpZ24gZXZlbnRzIGFuZCBhbm90aGVyIHRoaW5nc1xuXHRcdCovXG5cdFx0cmVhc3NpZ25BY3Rpb25zOiBmdW5jdGlvbigpIHtcblx0XHRcdHRoaXMuc2V0dGluZ3MudXBsb2FkZXJJbWcub2ZmKCdjb21wbGV0ZScpO1xuXHRcdFx0dGhpcy5zZXR0aW5ncy51cGxvYWRlckltZy5vbignY29tcGxldGUnLCBtZXRob2RzLm9uQ29tcGxldGVMb2FkSW1nLmJpbmQodGhpcykpO1xuXG5cdFx0XHQvLyBpZiB3YXMgZGVmaW5lZCBhIGJ1dHRvbiB0byBleGVjdXRlIGFjdGlvbiB0byBjcm9wXG5cdFx0XHRpZih0aGlzLnNldHRpbmdzLmJ0blRvQ3JvcCkge1xuXHRcdFx0XHR0aGlzLnNldHRpbmdzLmJ0blRvQ3JvcC5vZmYoJ2NsaWNrJywgbWV0aG9kcy5zdWJtaXRDcm9wSW1hZ2UuYmluZCh0aGlzKSk7XG5cdFx0XHRcdHRoaXMuc2V0dGluZ3MuYnRuVG9Dcm9wLm9uKCdjbGljaycsIG1ldGhvZHMuc3VibWl0Q3JvcEltYWdlLmJpbmQodGhpcykpO1xuXHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0dGhpcy5zZXR0aW5ncy5mb3JtQ3JvcC5vZmYoJ3N1Ym1pdCcsIG1ldGhvZHMuc3VibWl0Q3JvcEltYWdlLmJpbmQodGhpcykpO1xuXHRcdFx0XHR0aGlzLnNldHRpbmdzLmZvcm1Dcm9wLm9uKCdzdWJtaXQnLCBtZXRob2RzLnN1Ym1pdENyb3BJbWFnZS5iaW5kKHRoaXMpKTtcblx0XHRcdH1cblx0XHR9LFxuXG5cdFx0LyoqXG5cdFx0KiBkZXN0cm95IHBsdWdpblxuXHRcdCovXG5cdFx0ZGVzdHJveTogZnVuY3Rpb24gKCkge1xuXHRcdFx0Ly8gZGVzdHJveSBqY3JvcFxuXHRcdFx0aWYoIHRoaXMuc2V0dGluZ3MuaW1nQ3JvcC5kYXRhKCdKY3JvcCcpICE9PSB1bmRlZmluZWQgKXtcblx0XHRcdFx0dGhpcy5qY3JvcF9pbWcuZGVzdHJveSgpO1xuXHRcdFx0fVxuXG5cdFx0XHQvLyB1bmRlbGVnYXRlIGV2ZW50c1xuXHRcdFx0Ly8gdGhpcy5zZXR0aW5ncy51cGxvYWRlckltZy5vZmYoJ3VwbG9hZCcpO1xuXHRcdFx0dGhpcy5zZXR0aW5ncy51cGxvYWRlckltZy5vZmYoJ2NvbXBsZXRlJyk7XG5cdFx0XHR0aGlzLnNldHRpbmdzLmZvcm1Dcm9wLm9mZignc3VibWl0Jyk7XG5cblx0XHRcdC8vIHJlbW92ZSBvYmplY3QgcGx1Z2luIGluIGRhdGFcblx0XHRcdHRoaXMuJGVsZW1lbnQucmVtb3ZlRGF0YSgnaW1hZ2VVcGxvYWRlckNyb3AnKTtcblx0XHR9LFxuXG5cdFx0LyoqXG5cdFx0KiBzZXQgaW1hZ2Vcblx0XHQqIEBwYXJhbSB7U3RyaW5nfSB1cmxJbWFnZVxuXHRcdCogQHBhcmFtIHtGdW5jdGlvbn0gY2FsbGJhY2tcblx0XHQqL1xuXHRcdHNldEltYWdlOiBmdW5jdGlvbiAodXJsSW1hZ2UsIGNhbGxiYWNrKSB7XG5cdFx0XHR1cmxJbWFnZSB8fCAodXJsSW1hZ2UgPSB0aGlzLnNldHRpbmdzLmltZ0Nyb3AuYXR0cignc3JjJykpIHx8ICh1cmxJbWFnZSA9ICcnKTtcblxuICAgICAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgICAgICBpZiggIXRoaXMuc2V0dGluZ3MuaW1nQ3JvcCApIHsgdGhyb3cgXCJUaGUgaW1nQ3JvcCBlbGVtZW50IGhhdmUgbm90IHdlbnQgYXNzaWduXCI7IH1cbiAgICAgICAgICAgIH1jYXRjaChlcnIpIHtcbiAgICAgICAgICAgICAgICBjb25zb2xlLmVycm9yKCdFcnJvcjogJysgZXJyICsgXCIuXCIpO1xuICAgICAgICAgICAgfVxuXG5cdFx0XHR2YXIgX3RoaXMgPSB0aGlzO1xuXG5cdFx0XHQvLyB2YWxpZGF0ZSBpZiBhbHJlYWR5IG9yIG5vdCB3YXMgY3JlYXRlZCB0aGUgY3JvcCBpbWFnZVxuXHRcdFx0aWYoIHRoaXMuc2V0dGluZ3MuaW1nQ3JvcC5kYXRhKCdKY3JvcCcpICE9PSB1bmRlZmluZWQgKXtcblx0XHRcdFx0dGhpcy5qY3JvcF9pbWcgPSB0aGlzLnNldHRpbmdzLmltZ0Nyb3AuZGF0YSgnSmNyb3AnKTtcblxuXHRcdFx0XHQvLyBzZXQgaW1hZ2UgY3JvcFxuXHRcdFx0XHR0aGlzLmpjcm9wX2ltZy5zZXRJbWFnZSh1cmxJbWFnZSwgZnVuY3Rpb24gKCkge1xuXG5cdFx0XHRcdFx0dmFyIGRpbUltZyA9IFtdO1xuXHRcdFx0XHRcdC8vIGltYWdlIGNyb3Agc2V0dGluZ3Ncblx0XHRcdFx0XHRpZiggdGhpcy5zZXR0aW5ncy5jb25maWdJbWcubWluV2lkdGhJbWcgJiYgdGhpcy5zZXR0aW5ncy5jb25maWdJbWcubWluSGVpZ2h0SW1nICkge1xuXHRcdFx0XHRcdFx0ZGltSW1nID0gW3RoaXMuc2V0dGluZ3MuY29uZmlnSW1nLm1pbldpZHRoSW1nLCB0aGlzLnNldHRpbmdzLmNvbmZpZ0ltZy5taW5IZWlnaHRJbWddO1xuXHRcdFx0XHRcdH1lbHNlIHtcblx0XHRcdFx0XHRcdGRpbUltZyA9IHRoaXMuamNyb3BfaW1nLmdldEJvdW5kcygpO1xuXHRcdFx0XHRcdH1cblxuXHRcdFx0XHRcdG1ldGhvZHMuY2hhbmdlT3B0c0Nyb3AuY2FsbChfdGhpcywge1xuXHRcdFx0XHRcdFx0aW1nU2V0OiB1cmxJbWFnZSxcblx0XHRcdFx0XHRcdG1pbldpZHRoOiBfdGhpcy5zZXR0aW5ncy5jb25maWdJbWcubWluV2lkdGhJbWcsXG5cdFx0XHRcdFx0XHRtaW5IZWlnaHQ6IF90aGlzLnNldHRpbmdzLmNvbmZpZ0ltZy5taW5IZWlnaHRJbWcsXG5cdFx0XHRcdFx0XHRpbWdXaWR0aDogZGltSW1nWzBdLFxuXHRcdFx0XHRcdFx0aW1nSGVpZ2h0OiBkaW1JbWdbMV1cblx0XHRcdFx0XHR9KTtcblxuXHRcdFx0XHRcdC8vIGFkZCB2YWx1ZXMgdG8gdGhlIGNyb3AgZm9ybVxuXHRcdFx0XHRcdF90aGlzLnNldHRpbmdzLmZvcm1Dcm9wLmZpbmQoJ2lucHV0I2Nyb3BfdHlwZScpLnZhbCggJ3VybCcgKTtcblx0XHRcdFx0XHRfdGhpcy5zZXR0aW5ncy5mb3JtQ3JvcC5maW5kKCdpbnB1dCNmaWxlX25hbWUnKS52YWwoIHVybEltYWdlICk7XG5cdFx0XHRcdFx0X3RoaXMuc2V0dGluZ3MuZm9ybUNyb3AuZmluZCgnaW5wdXQjZmlsZV90eXBlJykudmFsKCB1cmxJbWFnZS5zcGxpdCgnLicpLnNsaWNlKC0xKSApO1xuXHRcdFx0XHR9KTtcblxuXHRcdFx0fWVsc2Uge1xuXG5cdFx0XHRcdHRoaXMuc2V0dGluZ3MuaW1nQ3JvcC5hdHRyKCdzcmMnLCB1cmxJbWFnZSk7XG5cblx0XHRcdFx0Ly8gY3JlYXRlIGNyb3Agd2hldGhlciBkb2VzIG5vdCBleGlzdFxuXHRcdFx0XHRtZXRob2RzLnJlbmRlckltYWdlQ3JvcC5jYWxsKHRoaXMsIHRoaXMuc2V0dGluZ3MuaW1nQ3JvcCwgZnVuY3Rpb24gKCkge1xuXG5cdFx0XHRcdFx0dmFyIGRpbUltZyA9IFtdO1xuXHRcdFx0XHRcdC8vIHNldHRpbmdzIGltYWdlIGNyb3Bcblx0XHRcdFx0XHRpZiggdGhpcy5zZXR0aW5ncy5jb25maWdJbWcubWluV2lkdGhJbWcgJiYgdGhpcy5zZXR0aW5ncy5jb25maWdJbWcubWluSGVpZ2h0SW1nICkge1xuXHRcdFx0XHRcdFx0ZGltSW1nID0gW3RoaXMuc2V0dGluZ3MuY29uZmlnSW1nLm1pbldpZHRoSW1nLCB0aGlzLnNldHRpbmdzLmNvbmZpZ0ltZy5taW5IZWlnaHRJbWddO1xuXHRcdFx0XHRcdH1lbHNlIHtcblx0XHRcdFx0XHRcdGRpbUltZyA9IHRoaXMuamNyb3BfaW1nLmdldEJvdW5kcygpO1xuXHRcdFx0XHRcdH1cblxuXHRcdFx0XHRcdG1ldGhvZHMuY2hhbmdlT3B0c0Nyb3AuY2FsbCh0aGlzLCB7XG5cdFx0XHRcdFx0XHRpbWdTZXQ6IHVybEltYWdlLFxuXHRcdFx0XHRcdFx0bWluV2lkdGg6IHRoaXMuc2V0dGluZ3MuY29uZmlnSW1nLm1pbldpZHRoSW1nLFxuXHRcdFx0XHRcdFx0bWluSGVpZ2h0OiB0aGlzLnNldHRpbmdzLmNvbmZpZ0ltZy5taW5IZWlnaHRJbWcsXG5cdFx0XHRcdFx0XHRpbWdXaWR0aDogZGltSW1nWzBdLFxuXHRcdFx0XHRcdFx0aW1nSGVpZ2h0OiBkaW1JbWdbMV1cblx0XHRcdFx0XHR9KTtcblxuXHRcdFx0XHRcdC8vIEFkZCB2YWx1ZXMgdG8gdGhlIGNyb3AgZm9ybVxuXHRcdFx0XHRcdHRoaXMuc2V0dGluZ3MuZm9ybUNyb3AuZmluZCgnaW5wdXQjY3JvcF90eXBlJykudmFsKCAndXJsJyApO1xuXHRcdFx0XHRcdHRoaXMuc2V0dGluZ3MuZm9ybUNyb3AuZmluZCgnaW5wdXQjZmlsZV9uYW1lJykudmFsKCB1cmxJbWFnZSApO1xuXHRcdFx0XHRcdHRoaXMuc2V0dGluZ3MuZm9ybUNyb3AuZmluZCgnaW5wdXQjZmlsZV90eXBlJykudmFsKCB1cmxJbWFnZS5zcGxpdCgnLicpLnNsaWNlKC0xKSApO1xuXG5cdFx0XHRcdH0uYmluZCh0aGlzKSk7XG5cdFx0XHR9XG5cblx0XHRcdC8vIGNhbGwgY2FsbGJhY2tcblx0XHRcdGlmKCAkLmlzRnVuY3Rpb24oY2FsbGJhY2spIClcblx0XHRcdFx0Y2FsbGJhY2suY2FsbCgpO1xuXHRcdH0sXG5cblx0XHQvKipcblx0XHQqIFJlbmRlciBGaW5lVXBsb2FkZXIgcGx1Z2luIGZvciB1c2VyIHByb2R1Y3QgaW1hZ2Vcblx0XHQqIEBwYXJhbSB7RWxlbWVudCBqUXVlcnl9ICR1cGxvYWRlckltZ1xuXHRcdCovXG5cdFx0cmVuZGVyVXBsb2FkZXJJbWc6IGZ1bmN0aW9uICgkdXBsb2FkZXJJbWcpIHtcblxuXHRcdFx0aWYoICFleGlzdFVwbG9hZGVyUGx1Z2luKCkgKSB7XG5cdFx0XHRcdGNvbnNvbGUuZXJyb3IoJ0Vycm9yOiBUaGUgaW1hZ2VVcGxvYWRlckNyb3AgalF1ZXJ5IGxpYnJhcnkgZG8gbmVlZCBvZiB0aGUgZmluZS11cGxvYWRlciBqUXVlcnkgbGlicmFyeS4nKTtcblx0XHRcdFx0cmV0dXJuIGZhbHNlO1xuICAgICAgICAgICAgfVxuXG5cdFx0XHR2YXIgX3RoaXMgPSB0aGlzO1xuXG5cdFx0XHQkdXBsb2FkZXJJbWcuZmluZVVwbG9hZGVyKHtcblx0XHRcdFx0ZGVidWc6IGZhbHNlLFxuXHRcdFx0XHR0ZW1wbGF0ZTogdGhpcy5zZXR0aW5ncy50ZW1wbGF0ZUltZ1VwbG9hZGVyLFxuXHRcdFx0XHRyZXF1ZXN0OiB0aGlzLnNldHRpbmdzLnVwbG9hZGRpbmcsXG5cdFx0XHRcdHRodW1ibmFpbHM6IHtcblx0XHRcdFx0XHRwbGFjZWhvbGRlcnM6IHtcblx0XHRcdFx0XHRcdHdhaXRpbmdQYXRoOiAnaW1nL3dhaXRpbmctZ2VuZXJpYy5wbmcnLFxuXHRcdFx0XHRcdFx0bm90QXZhaWxhYmxlUGF0aDogJ2ltZy9ub3RfYXZhaWxhYmxlLWdlbmVyaWMucG5nJ1xuXHRcdFx0XHRcdH1cblx0XHRcdFx0fSxcblx0XHRcdFx0YXV0b1VwbG9hZDogdHJ1ZSxcblx0XHRcdFx0bXVsdGlwbGU6IGZhbHNlLFxuXHRcdFx0XHR2YWxpZGF0aW9uOiB7XG5cdFx0XHRcdFx0aW1hZ2U6IHtcblx0XHRcdFx0XHRcdC8vIG1pbldpZHRoOiB0aGlzLnNldHRpbmdzLmNvbmZpZ0ltZy5taW5XaWR0aEltZyB8fCBkZWZhdWx0cy5jb25maWdJbWcubWluV2lkdGhJbWcsXG5cdFx0XHRcdFx0XHQvLyBtaW5IZWlnaHQ6IHRoaXMuc2V0dGluZ3MuY29uZmlnSW1nLm1pbkhlaWdodEltZyB8fCBkZWZhdWx0cy5jb25maWdJbWcubWluSGVpZ2h0SW1nLFxuXHRcdFx0XHRcdFx0bWF4V2lkdGg6IHRoaXMuc2V0dGluZ3MuY29uZmlnSW1nLm1heFdpZHRoSW1nIHx8IGRlZmF1bHRzLmNvbmZpZ0ltZy5tYXhXaWR0aEltZyxcblx0XHRcdFx0XHRcdG1heEhlaWdodDogdGhpcy5zZXR0aW5ncy5jb25maWdJbWcubWF4SGVpZ2h0SW1nIHx8IGRlZmF1bHRzLmNvbmZpZ0ltZy5tYXhIZWlnaHRJbWdcblx0XHRcdFx0XHR9LFxuXHRcdFx0XHRcdGFsbG93ZWRFeHRlbnNpb25zOiB0aGlzLnNldHRpbmdzLmNvbmZpZ0ltZy5hbGxvd2VkRXh0ZW5zaW9ucyB8fCBkZWZhdWx0cy5jb25maWdJbWcuYWxsb3dlZEV4dGVuc2lvbnMsXG5cdFx0XHRcdFx0c2l6ZUxpbWl0OiB0aGlzLnNldHRpbmdzLmNvbmZpZ0ltZy5zaXplTGltaXQgfHwgZGVmYXVsdHMuY29uZmlnSW1nLnNpemVMaW1pdCxcblx0XHRcdFx0XHRzdG9wT25GaXJzdEludmFsaWRGaWxlOiBmYWxzZSxcblx0XHRcdFx0XHRpdGVtTGltaXQ6IDBcblx0XHRcdFx0fSxcblx0XHRcdFx0c2NhbGluZzoge1xuXHRcdFx0XHRcdHNlbmRPcmlnaW5hbDogdGhpcy5zZXR0aW5ncy5jb25maWdJbWcuc2VuZE9yaWdpbmFsIHx8IGRlZmF1bHRzLmNvbmZpZ0ltZy5zZW5kT3JpZ2luYWwsXG5cdFx0XHRcdFx0ZGVmYXVsdFF1YWxpdHk6IHRoaXMuc2V0dGluZ3MuY29uZmlnSW1nLmRlZmF1bHRRdWFsaXR5IHx8IGRlZmF1bHRzLmNvbmZpZ0ltZy5kZWZhdWx0UXVhbGl0eVxuXHRcdFx0XHR9LFxuXHRcdFx0XHQvLyBFdmVudHMgaGFuZGxlcnNcblx0XHRcdFx0Y2FsbGJhY2tzOiB7XG5cdFx0XHRcdFx0b25VcGxvYWQ6IG1ldGhvZHMub25Mb2FkSW1nLmJpbmQodGhpcylcblx0XHRcdFx0fSxcbiAgICAgICAgICAgICAgICBtZXNzYWdlczogJC5leHRlbmQoe30sIHRoaXMuc2V0dGluZ3MubWVzc2FnZXMpLFxuXHRcdFx0XHRkcmFnQW5kRHJvcDoge1xuXHRcdFx0XHRcdGV4dHJhRHJvcHpvbmVzOiB0aGlzLnNldHRpbmdzLmV4dHJhRHJvcHpvbmVzXG5cdFx0XHRcdH0sXG5cdFx0XHRcdHNob3dNZXNzYWdlOiB0aGlzLnNldHRpbmdzLnNob3dNZXNzYWdlLFxuXHRcdFx0XHRzaG93Q29uZmlybTogdGhpcy5zZXR0aW5ncy5zaG93Q29uZmlybSxcblx0XHRcdFx0c2hvd1Byb21wdDogdGhpcy5zZXR0aW5ncy5zaG93UHJvbXB0XG5cdFx0XHR9KTtcblx0XHR9LFxuXG5cdFx0LyoqXG5cdFx0KiBzZXQgaW1hZ2UgY3JvcCBwbHVnaW5cblx0XHQqIEBwYXJhbSB7RWxlbWVudCBqUXVlcnl9ICRpbWdDcm9wXG5cdFx0KiBAcGFyYW0ge0Z1bmN0aW9ufSBjYWxsYmFja1xuXHRcdCovXG5cdFx0cmVuZGVySW1hZ2VDcm9wOiBmdW5jdGlvbiAoJGltZ0Nyb3AsIGNhbGxiYWNrKSB7XG5cblx0XHRcdGlmKCAhZXhpc3RDcm9wUGx1Z2luKCkgKSB7XG5cdFx0XHRcdGNvbnNvbGUuZXJyb3IoJ0Vycm9yOiBUaGUgaW1hZ2VVcGxvYWRlckNyb3AgalF1ZXJ5IGxpYnJhcnkgbmVlZHMgb2YgdGhlIGpjcm9wIGpRdWVyeSBsaWJyYXJ5LicpO1xuICAgICAgICAgICAgICAgIHJldHVybiBmYWxzZTtcbiAgICAgICAgICAgIH1cblxuXHRcdFx0Ly9pbWFnZXMgY3JvcFxuXHRcdFx0dmFyIF90aGlzID0gdGhpcztcblxuXHRcdFx0JGltZ0Nyb3AuSmNyb3Aoe1xuXHRcdFx0XHRvblNlbGVjdDogbWV0aG9kcy5zZXRDb29yZHMuYmluZCh0aGlzKSxcblx0XHRcdFx0b25DaGFuZ2U6IG1ldGhvZHMuc2V0Q29vcmRzLmJpbmQodGhpcyksXG5cdFx0XHRcdG9uUmVsZWFzZTogZnVuY3Rpb24gKCkge1xuXHRcdFx0XHR9LFxuXHRcdFx0XHQvLyBtaW5TaXplOiBbdGhpcy5zZXR0aW5ncy5jb25maWdJbWcubWluV2lkdGhJbWcsIHRoaXMuc2V0dGluZ3MuY29uZmlnSW1nLm1pbkhlaWdodEltZ10sXG5cdFx0XHRcdC8vIG1heFNpemU6IFt0aGlzLnNldHRpbmdzLmNvbmZpZ0ltZy5tYXhXaWR0aEltZywgdGhpcy5zZXR0aW5ncy5jb25maWdJbWcubWF4SGVpZ2h0SW1nXSxcblx0XHRcdFx0YmdDb2xvcjogJ2JsYWNrJyxcblx0XHRcdFx0YmdPcGFjaXR5OiAwLjQsXG5cdFx0XHRcdHNldFNlbGVjdDogWyAwLCAwLCB0aGlzLnNldHRpbmdzLmNvbmZpZ0ltZy5taW5XaWR0aEltZywgdGhpcy5zZXR0aW5ncy5jb25maWdJbWcubWluSGVpZ2h0SW1nIF0sXG5cdFx0XHRcdGFzcGVjdFJhdGlvOiAgdGhpcy5zZXR0aW5ncy5jb25maWdJbWcubWluV2lkdGhJbWcgLyB0aGlzLnNldHRpbmdzLmNvbmZpZ0ltZy5taW5IZWlnaHRJbWcsXG5cdFx0XHRcdGJveFdpZHRoOiAkaW1nQ3JvcC5wYXJlbnQoKS53aWR0aCgpLFxuXHRcdFx0XHRib3hIZWlnaHQ6IDAsXG5cdFx0XHRcdGFsbG93U2VsZWN0OiBmYWxzZSxcblx0XHRcdFx0YWxsb3dSZXNpemU6IHRydWVcblxuXHRcdFx0fSxmdW5jdGlvbigpe1xuXHRcdFx0XHRfdGhpcy5qY3JvcF9pbWcgPSB0aGlzO1xuXG5cdFx0XHRcdHZhciBkaW1EZWZhdWx0ID0gX3RoaXMuamNyb3BfaW1nLmdldEJvdW5kcygpO1xuXG5cdFx0XHRcdG1ldGhvZHMuY2hhbmdlT3B0c0Nyb3AuY2FsbChfdGhpcywge1xuXHRcdFx0XHRcdGltZ1NldDogJGltZ0Nyb3AuYXR0cignc3JjJyksXG5cdFx0XHRcdFx0bWluV2lkdGg6IF90aGlzLnNldHRpbmdzLmNvbmZpZ0ltZy5taW5XaWR0aEltZyxcblx0XHRcdFx0XHRtaW5IZWlnaHQ6IF90aGlzLnNldHRpbmdzLmNvbmZpZ0ltZy5taW5IZWlnaHRJbWcsXG5cdFx0XHRcdFx0aW1nV2lkdGg6IGRpbURlZmF1bHRbMF0sXG5cdFx0XHRcdFx0aW1nSGVpZ2h0OiBkaW1EZWZhdWx0WzFdXG5cdFx0XHRcdH0pO1xuXG5cdFx0XHRcdGlmICh0eXBlb2YgY2FsbGJhY2sgPT0gJ2Z1bmN0aW9uJyl7XG5cdFx0XHRcdFx0Y2FsbGJhY2suY2FsbCgpO1xuXHRcdFx0XHR9XG5cdFx0XHR9KTtcblx0XHR9LFxuXG5cdFx0LyoqXG5cdFx0KiBTZXQgc2VsZWN0IG9uIGltYWdlIGNyb3Bcblx0XHQqIEBwYXJhbSBOdW1iZXIgaW1nV2lkdGhcblx0XHQqIEBwYXJhbSBOdW1iZXIgaW1nSGVpZ2h0XG5cdFx0Ki9cblx0XHRjaGFuZ2VPcHRzQ3JvcDogZnVuY3Rpb24gKG9wdGlvbnMsIGNhbGxiYWNrKSB7XG5cblx0XHRcdHZhciBzZXR0aW5ncyA9IHtcblx0XHRcdFx0aW1nU2V0OiAnJyxcblx0XHRcdFx0bWluV2lkdGg6IDAsXG5cdFx0XHRcdG1pbkhlaWdodDogMCxcblx0XHRcdFx0aW1nV2lkdGg6IDAsXG5cdFx0XHRcdGltZ0hlaWdodDogMCxcblx0XHRcdFx0ZGltU2VsZWN0OiBbMCwwXSxcblx0XHRcdFx0aXg6IDAsXG5cdFx0XHRcdGl5OiAwXG5cdFx0XHR9O1xuXG5cdFx0XHQkLmV4dGVuZChzZXR0aW5ncywgb3B0aW9ucyk7XG5cblx0XHRcdC8vIHNldCBwcm9wZXJ0aWVzXG5cdFx0XHRzZXR0aW5ncy5kaW1TZWxlY3QgPSBzZXRTcXVhcmUoc2V0dGluZ3MuaW1nV2lkdGgsIHNldHRpbmdzLmltZ0hlaWdodCk7XG5cdFx0XHRzZXR0aW5ncy5peCA9IChzZXR0aW5ncy5pbWdXaWR0aCAtIHNldHRpbmdzLmRpbVNlbGVjdFswXSkvMjtcblxuXHRcdFx0Ly8gcmVmcmVzaCBvcHRpb25zIGNyb3Bcblx0XHRcdHRoaXMuamNyb3BfaW1nLnNldE9wdGlvbnMoe1xuXHRcdFx0XHR0cnVlU2l6ZTogWyBNYXRoLmZsb29yKHNldHRpbmdzLmltZ1dpZHRoKSwgTWF0aC5mbG9vcihzZXR0aW5ncy5pbWdIZWlnaHQpIF1cblx0XHRcdFx0Ly8gb3V0ZXJJbWFnZTogc2V0dGluZ3MuaW1nU2V0XG5cdFx0XHR9KTtcblxuXHRcdFx0dGhpcy5zZXR0aW5ncy5wcmV2aWV3SW1nLmF0dHIoJ3NyYycsIHNldHRpbmdzLmltZ1NldCk7XG5cbiAgICAgICAgICAgIHRoaXMuamNyb3BfaW1nLnNldFNlbGVjdCggW3NldHRpbmdzLml4LCBzZXR0aW5ncy5peSwgc2V0dGluZ3MuZGltU2VsZWN0WzBdLCBzZXR0aW5ncy5kaW1TZWxlY3RbMV1dICk7XG5cblx0XHRcdC8vcnVuIGNhbGxiYWNrXG5cdFx0XHRpZiAodHlwZW9mIGNhbGxiYWNrID09ICdmdW5jdGlvbicpIHtcblx0XHRcdFx0Y2FsbGJhY2suY2FsbCgpO1xuXHRcdFx0fVxuXHRcdH0sXG5cblx0XHQvKipcblx0XHQqIHN1Ym1pdCBldmVudCBmb3IgaW1hZ2UgY3JvcFxuXHRcdCovXG5cdFx0c3VibWl0Q3JvcEltYWdlOiBmdW5jdGlvbihlKSB7XG5cdFx0XHRlLnByZXZlbnREZWZhdWx0KCk7XG5cblx0XHRcdHZhciBfdGhpcyA9IHRoaXM7XG5cblx0XHRcdHZhciBkYXRhID0gZm9ybVRvSnNvbiggdGhpcy5zZXR0aW5ncy5mb3JtQ3JvcCApO1xuXHRcdFx0ZGF0YS50YXJnX3cgPSB0aGlzLnNldHRpbmdzLmNvbmZpZ0ltZy5taW5XaWR0aEltZztcblx0XHRcdGRhdGEudGFyZ19oID0gdGhpcy5zZXR0aW5ncy5jb25maWdJbWcubWluSGVpZ2h0SW1nO1xuXG5cdFx0XHQkLmV4dGVuZChkYXRhLCB0aGlzLnNldHRpbmdzLmNyb3BwaW5nLnBhcmFtcyk7XG5cblx0XHRcdC8vIGVtaXQgY2FsbGJhY2tcblx0XHRcdGlmKCAkLmlzRnVuY3Rpb24odGhpcy5zZXR0aW5ncy5jYWxsYmFja3NbJ29uQ3JvcHBpbmcnXSkgKVxuXHRcdFx0XHR0aGlzLnNldHRpbmdzLmNhbGxiYWNrc1snb25Dcm9wcGluZyddLmNhbGwodGhpcywgdGhpcy5qY3JvcF9pbWcpO1xuXG5cdFx0XHR0aGlzLnNldHRpbmdzLmZvcm1Dcm9wLmZpbmQoJzpzdWJtaXQnKS5hZGRDbGFzcygnZGlzYWJsZWQnKTtcblxuXHRcdFx0JC5wb3N0KHRoaXMuc2V0dGluZ3MuY3JvcHBpbmcuZW5kcG9pbnQsIGRhdGEsIG1ldGhvZHMub25TdWNjZXNzQ3JvcC5iaW5kKHRoaXMpKVxuXHRcdFx0IC5mYWlsKG1ldGhvZHMub25FcnJvckNyb3AuYmluZCh0aGlzKSk7XG5cdFx0fSxcblxuXHRcdC8vIC0tLS0tLS0tLS0tLS0tXG5cdFx0Ly8gZXZlbnRzIGhhbmRsZXJcblx0XHQvLyAtLS0tLS0tLS0tLS0tLVxuXHRcdC8qKlxuXHRcdCogaGFuZGxlciBmb3Igc2V0IHRvIGNvb3JkcyBvZiBpbWFnZSBjcm9wXG5cdFx0KiBAcGFyYW0gT2JqZWN0IGNvb3Jkc1xuXHRcdCovXG5cdFx0c2V0Q29vcmRzOiBmdW5jdGlvbiAoY29vcmRzKXtcblxuXHRcdFx0dmFyIHJhdGlvTGVzc2VyID0gdGhpcy5zZXR0aW5ncy5jb25maWdJbWcubWluSGVpZ2h0SW1nIC8gdGhpcy5zZXR0aW5ncy5jb25maWdJbWcubWluV2lkdGhJbWc7XG5cdFx0XHR2YXIgZGltSW1nID0gdGhpcy5qY3JvcF9pbWcgIT09IG51bGwgPyB0aGlzLmpjcm9wX2ltZy5nZXRCb3VuZHMoKSA6IGZhbHNlLFxuXHRcdFx0XHRyeCA9ICQodGhpcy5zZXR0aW5ncy5wcmV2aWV3SW1nLnBhcmVudCgpWzBdKS53aWR0aCgpIC8gY29vcmRzLncsXG5cdFx0XHRcdHJ5ID0gKHJhdGlvTGVzc2VyICogJCh0aGlzLnNldHRpbmdzLnByZXZpZXdJbWcucGFyZW50KClbMF0pLndpZHRoKCkpIC8gY29vcmRzLmg7XG5cblx0XHRcdC8vIHNldCBjb250ZW50IGhlaWdodCBvZiBjb250ZW50IHByZXZpZXdcbiAgICAgICAgICAgIGlmKCB0aGlzLnNldHRpbmdzLnByZXZpZXdJbWcuYXR0cignc3JjJykgKSB7XG4gICAgICAgICAgICAgICAgJCh0aGlzLnNldHRpbmdzLnByZXZpZXdJbWcucGFyZW50KClbMF0pLmhlaWdodCggcmF0aW9MZXNzZXIgKiAkKHRoaXMuc2V0dGluZ3MucHJldmlld0ltZy5wYXJlbnQoKVswXSkud2lkdGgoKSApO1xuICAgICAgICAgICAgfVxuXG5cdFx0XHR0aGlzLnNldHRpbmdzLmZvcm1Dcm9wLmZpbmQoJ2lucHV0LmNyb3AteCcpLnZhbCggY29vcmRzLnggKTtcblx0XHRcdHRoaXMuc2V0dGluZ3MuZm9ybUNyb3AuZmluZCgnaW5wdXQuY3JvcC15JykudmFsKCBjb29yZHMueSApO1xuXHRcdFx0dGhpcy5zZXR0aW5ncy5mb3JtQ3JvcC5maW5kKCdpbnB1dC5jcm9wLXcnKS52YWwoIGNvb3Jkcy53ICk7XG5cdFx0XHR0aGlzLnNldHRpbmdzLmZvcm1Dcm9wLmZpbmQoJ2lucHV0LmNyb3AtaCcpLnZhbCggY29vcmRzLmggKTtcblxuXHRcdFx0Ly8gc2V0IHByZXZpZXcgaW1hZ2Vcblx0XHRcdGlmKCBkaW1JbWcgKXtcblx0XHRcdFx0dGhpcy5zZXR0aW5ncy5wcmV2aWV3SW1nLmNzcyh7XG5cdFx0XHRcdFx0d2lkdGg6IE1hdGgucm91bmQocnggKiBkaW1JbWdbMF0pICsgJ3B4Jyxcblx0XHRcdFx0XHRoZWlnaHQ6IE1hdGgucm91bmQocnkgKiBkaW1JbWdbMV0pICsgJ3B4Jyxcblx0XHRcdFx0XHRtaW5XaWR0aDogTWF0aC5yb3VuZChyeCAqIGRpbUltZ1swXSkgKyAncHgnLFxuXHRcdFx0XHRcdG1pbkhlaWdodDogTWF0aC5yb3VuZChyeSAqIGRpbUltZ1sxXSkgKyAncHgnLFxuXHRcdFx0XHRcdG1hcmdpbkxlZnQ6ICctJyArIE1hdGgucm91bmQocnggKiBjb29yZHMueCkgKyAncHgnLFxuXHRcdFx0XHRcdG1hcmdpblRvcDogJy0nICsgTWF0aC5yb3VuZChyeSAqIGNvb3Jkcy55KSArICdweCdcblx0XHRcdFx0fSk7XG5cdFx0XHR9XG5cdFx0fSxcblxuXHRcdC8qKlxuXHRcdCogd2lsbCB1cGxvYWQgaW1hZ2Vcblx0XHQqIEBwYXJhbSBOdW1iZXIgaWRcblx0XHQqIEBwYXJhbSBTdHJpbmcgbmFtZVxuXHRcdCovXG5cdFx0b25Mb2FkSW1nOiBmdW5jdGlvbiAoaWQsIG5hbWUpIHtcblxuXHRcdFx0dmFyICRhcmVhRHJvcCA9IHRoaXMuc2V0dGluZ3MudXBsb2FkZXJJbWcuZmluZVVwbG9hZGVyKCdnZXREcm9wVGFyZ2V0JywgaWQpO1xuXG5cdFx0XHQvLyB3aGVuIHRoZSBpbWFnZSB3YXMgbG9hZGVkIHdpdGggYSBkcm9wIHpvbmVcblx0XHRcdGlmKCAkYXJlYURyb3AgIT09IHVuZGVmaW5lZCAmJiAkYXJlYURyb3AubGVuZ3RoICl7XG5cdFx0XHRcdGlmKCAkYXJlYURyb3AuaGFzQ2xhc3MoJ2ltYWdlLWFyZWEtZHJvcCcpIHx8ICRhcmVhRHJvcC5oYXNDbGFzcygnd3JhcHBlci1pbWFnZS1jcm9wJykgKXtcblxuXHRcdFx0XHRcdG1ldGhvZHMucmVhc3NpZ25BY3Rpb25zLmNhbGwodGhpcyk7XG5cdFx0XHRcdFx0bWV0aG9kcy5zZXRJbWFnZS5jYWxsKHRoaXMpO1xuXHRcdFx0XHR9XG5cdFx0XHR9XG5cblx0XHRcdGlmKCAkLmlzRnVuY3Rpb24odGhpcy5zZXR0aW5ncy5jYWxsYmFja3NbJ29uTG9hZEltZyddKSApIHtcblx0XHRcdFx0dGhpcy5zZXR0aW5ncy5jYWxsYmFja3NbJ29uTG9hZEltZyddLmNhbGwodGhpcywgdGhpcy5zZXR0aW5ncy51cGxvYWRlckltZywgaWQsIG5hbWUpO1xuXHRcdFx0fVxuXHRcdH0sXG5cblx0XHQvKipcblx0XHQqIGNvbXBsZXRlIGV2ZW50IGZvciB1cGxvYWQgaW1hZ2Vcblx0XHQqIEBwYXJhbSBOdW1iZXIgaWRcblx0XHQqIEBwYXJhbSBTdHJpbmcgbmFtZVxuXHRcdCogQHBhcmFtIE9iamVjdCByZXNcblx0XHQqIEBwYXJhbSBPYmplY3QgeGhyXG5cdFx0Ki9cblx0XHRvbkNvbXBsZXRlTG9hZEltZzogZnVuY3Rpb24gKGV2ZW50LCBpZCwgbmFtZSwgcmVzKSB7XG5cblx0XHRcdHZhciBfdGhpcyA9IHRoaXM7XG5cblx0XHRcdGlmKCAhcmVzLnN1Y2Nlc3MgKVxuXHRcdFx0XHRyZXR1cm47XG5cblx0XHRcdC8vIHNldHRpbmdzIGltYWdlIGNyb3Bcblx0XHRcdGlmKCB0aGlzLnNldHRpbmdzLmltZ0Nyb3AuZGF0YSgnSmNyb3AnKSAhPT0gdW5kZWZpbmVkICkge1xuXG5cdFx0XHRcdHRoaXMuamNyb3BfaW1nLnNldEltYWdlKHJlcy5maWxlX3BhdGgsIGZ1bmN0aW9uICgpIHtcblxuXHRcdFx0XHRcdHZhciBkaW1JbWcgPSBbcmVzLmZpbGVfd2lkdGgsIHJlcy5maWxlX2hlaWdodF07XG5cblx0XHRcdFx0XHRtZXRob2RzLmNoYW5nZU9wdHNDcm9wLmNhbGwodGhpcywge1xuXHRcdFx0XHRcdFx0aW1nU2V0OiByZXMuZmlsZV9wYXRoLFxuXHRcdFx0XHRcdFx0bWluV2lkdGg6IHRoaXMuc2V0dGluZ3MuY29uZmlnSW1nLm1pbldpZHRoSW1nLFxuXHRcdFx0XHRcdFx0bWluSGVpZ2h0OiB0aGlzLnNldHRpbmdzLmNvbmZpZ0ltZy5taW5IZWlnaHRJbWcsXG5cdFx0XHRcdFx0XHRpbWdXaWR0aDogcmVzLmZpbGVfd2lkdGgsXG5cdFx0XHRcdFx0XHRpbWdIZWlnaHQ6IHJlcy5maWxlX2hlaWdodFxuXG5cdFx0XHRcdFx0fSwgZnVuY3Rpb24gKCkge1xuXHRcdFx0XHRcdFx0Ly8gZW1pdCBjYWxsYmFja1xuXHRcdFx0XHRcdFx0aWYoICQuaXNGdW5jdGlvbih0aGlzLnNldHRpbmdzLmNhbGxiYWNrc1snb25Db21wbGV0ZUxvYWQnXSkgKVxuXHRcdFx0XHRcdFx0XHR0aGlzLnNldHRpbmdzLmNhbGxiYWNrc1snb25Db21wbGV0ZUxvYWQnXS5jYWxsKHRoaXMsIHRoaXMuc2V0dGluZ3MudXBsb2FkZXJJbWcsIGlkLCBuYW1lLCByZXMpO1xuXHRcdFx0XHRcdH0uYmluZCh0aGlzKSk7XG5cblx0XHRcdFx0fS5iaW5kKHRoaXMpKTtcblxuXHRcdFx0fWVsc2Uge1xuXG5cdFx0XHRcdHRoaXMuc2V0dGluZ3MuaW1nQ3JvcC5hdHRyKCdzcmMnLCByZXMuZmlsZV9wYXRoKTtcblxuXHRcdFx0XHRtZXRob2RzLnJlbmRlckltYWdlQ3JvcC5jYWxsKHRoaXMsIHRoaXMuc2V0dGluZ3MuaW1nQ3JvcCwgZnVuY3Rpb24gKCkge1xuXG5cdFx0XHRcdFx0bWV0aG9kcy5jaGFuZ2VPcHRzQ3JvcC5jYWxsKHRoaXMsIHtcblx0XHRcdFx0XHRcdGltZ1NldDogcmVzLmZpbGVfcGF0aCxcblx0XHRcdFx0XHRcdG1pbldpZHRoOiB0aGlzLnNldHRpbmdzLmNvbmZpZ0ltZy5taW5XaWR0aEltZyxcblx0XHRcdFx0XHRcdG1pbkhlaWdodDogdGhpcy5zZXR0aW5ncy5jb25maWdJbWcubWluSGVpZ2h0SW1nLFxuXHRcdFx0XHRcdFx0aW1nV2lkdGg6IHJlcy5maWxlX3dpZHRoLFxuXHRcdFx0XHRcdFx0aW1nSGVpZ2h0OiByZXMuZmlsZV9oZWlnaHRcblx0XHRcdFx0XHR9LCBmdW5jdGlvbiAoKSB7XG5cdFx0XHRcdFx0XHQvLyBlbWl0IGNhbGxiYWNrXG5cdFx0XHRcdFx0XHRpZiggJC5pc0Z1bmN0aW9uKHRoaXMuc2V0dGluZ3MuY2FsbGJhY2tzWydvbkNvbXBsZXRlTG9hZCddKSApIHtcblx0XHRcdFx0XHRcdFx0dGhpcy5zZXR0aW5ncy5jYWxsYmFja3NbJ29uQ29tcGxldGVMb2FkJ10uY2FsbCh0aGlzLCB0aGlzLnNldHRpbmdzLnVwbG9hZGVySW1nLCBpZCwgbmFtZSwgcmVzKTtcblx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHR9LmJpbmQodGhpcykpO1xuXG5cdFx0XHRcdH0uYmluZCh0aGlzKSk7XG5cdFx0XHR9XG5cblx0XHRcdC8vIEFkZCB2YWx1ZXMgdG8gdGhlIGNyb3AgZm9ybVxuXHRcdFx0dGhpcy5zZXR0aW5ncy5mb3JtQ3JvcC5maW5kKCdpbnB1dCNjcm9wX3R5cGUnKS52YWwoICduYW1lJyApO1xuXHRcdFx0dGhpcy5zZXR0aW5ncy5mb3JtQ3JvcC5maW5kKCdpbnB1dCNmaWxlX25hbWUnKS52YWwoIHJlcy5maWxlX25hbWUgKTtcblx0XHRcdHRoaXMuc2V0dGluZ3MuZm9ybUNyb3AuZmluZCgnaW5wdXQjZmlsZV90eXBlJykudmFsKCByZXMuZmlsZV90eXBlICk7XG5cdFx0fSxcblxuXHRcdC8qKlxuXHRcdCogc3VjY2VzcyBldmVudCBmb3IgY3JvcCBpbWFnZVxuXHRcdCogQHBhcmFtIE9iamVjdCByZXNcblx0XHQqIEBwYXJhbSBTdHJpbmcgc3RhdHVzXG5cdFx0KiBAcGFyYW0gT2JqZWN0IGpxWEhSXG5cdFx0Ki9cblx0XHRvblN1Y2Nlc3NDcm9wOiBmdW5jdGlvbiAocmVzcCwgc3RhdHVzLCBqcVhIUikge1xuXG5cdFx0XHR0aGlzLnNldHRpbmdzLmZvcm1Dcm9wLmZpbmQoJzpzdWJtaXQnKS5yZW1vdmVDbGFzcygnZGlzYWJsZWQnKTtcblxuXHRcdFx0Ly8gY2FsbCBjcm9wIGNvbXBsZXRlXG5cdFx0XHRpZiggJC5pc0Z1bmN0aW9uKHRoaXMuc2V0dGluZ3MuY2FsbGJhY2tzWydvbkNyb3BDb21wbGV0ZSddKSApIHtcblx0XHRcdFx0dGhpcy5zZXR0aW5ncy5jYWxsYmFja3NbJ29uQ3JvcENvbXBsZXRlJ10uY2FsbCh0aGlzLCB0aGlzLmpjcm9wX2ltZywgcmVzcCwganFYSFIpO1xuXHRcdFx0fVxuXHRcdH0sXG5cblx0XHQvKipcblx0XHQqIGVycm9yIGV2ZW50IGZvciBjcm9wIGltYWdlXG5cdFx0KiBAcGFyYW0gT2JqZWN0IGpxWEhSXG5cdFx0KiBAcGFyYW0gU3RyaW5nIHN0YXR1c1xuXHRcdCogQHBhcmFtIFN0cmluZyBlcnJvclxuXHRcdCovXG5cdFx0b25FcnJvckNyb3A6IGZ1bmN0aW9uKGpxWEhSLCBzdGF0dXMsIGVycm9yKSB7XG5cblx0XHRcdHRoaXMuc2V0dGluZ3MuZm9ybUNyb3AuZmluZCgnOnN1Ym1pdCcpLnJlbW92ZUNsYXNzKCdkaXNhYmxlZCcpO1xuXG5cdFx0XHQvLyBjYWxsIGNyb3AgZXJyb3Jcblx0XHRcdGlmKCAkLmlzRnVuY3Rpb24odGhpcy5zZXR0aW5ncy5jYWxsYmFja3NbJ29uQ3JvcEVycm9yJ10pICkge1xuXHRcdFx0XHR0aGlzLnNldHRpbmdzLmNhbGxiYWNrc1snb25Dcm9wRXJyb3InXS5jYWxsKHRoaXMsIHRoaXMuamNyb3BfaW1nLCBqcVhIUiwgZXJyb3IpO1xuXHRcdFx0fVxuXHRcdH1cblx0fTtcblxuXHQvLyBwbHVnaW4gY2xhc3Ncblx0Ly8gaW5zdGFuY2UgdGhlIHBsdWdpblxuXHQvLyAtLS0tLS0tLS0tLS0tLS0tLS0tXG5cdCQuaW1hZ2VVcGxvYWRlckNyb3AgPSBmdW5jdGlvbiAoZWxlbWVudCwgb3B0aW9ucykge1xuXHRcdG9wdGlvbnMgfHwgKG9wdGlvbnMgPSB7fSk7XG5cblx0XHQvLyBwYXJhbWV0ZXJzXG5cdFx0dmFyIHBsdWdpbiA9IHRoaXM7XG5cblx0XHQvLyBzZXQgYXR0cmlidXRlc1xuXHRcdHRoaXMuamNyb3BfaW1nID0gbnVsbDtcblx0XHR0aGlzLmVsZW1lbnQgPSBlbGVtZW50O1xuXHRcdHRoaXMuJGVsZW1lbnQgPSAkKGVsZW1lbnQpO1xuXG5cdFx0Ly8gaW5pdGlhbGl6ZSBwbHVnaW5cblx0XHRpZiggJC5pc0Z1bmN0aW9uKHBsdWdpbi5pbml0KSApXG5cdFx0XHRwbHVnaW4uaW5pdChlbGVtZW50LCBvcHRpb25zKTtcblx0fTtcblxuXHQvLyBleHRlbmRzIHByb3RvdHlwZSBvZiBwbHVnaW5cblx0JC5pbWFnZVVwbG9hZGVyQ3JvcC5wcm90b3R5cGUgPSB7XG5cblx0XHQvLyBwbHVnaW4ncyBzZXR0aW5nc1xuXHRcdHNldHRpbmdzIDoge30sXG5cblx0XHQvKipcblx0XHQqIENvbnN0cnVjdG9yIG1ldGhvZFxuXHRcdCovXG5cdFx0aW5pdCA6IGZ1bmN0aW9uKGVsZW1lbnQsIG9wdGlvbnMpIHtcblxuXHRcdFx0dGhpcy5zZXR0aW5ncyA9ICQuZXh0ZW5kKHt9LCBkZWZhdWx0cywgb3B0aW9ucyk7XG5cblx0XHRcdC8vIGNoZWNrIG91dCBpZiBhbHJlYWR5IHdhcyBhc3NpZ25lZCB0aGUgamNyb3AgbGlicmFyeVxuXHRcdFx0aWYoIHRoaXMuc2V0dGluZ3MuaW1nQ3JvcCAmJiB0aGlzLnNldHRpbmdzLmltZ0Nyb3AuZGF0YSgnSmNyb3AnKSAhPT0gdW5kZWZpbmVkICkge1xuXHRcdFx0XHR0aGlzLmpjcm9wX2ltZyA9IHRoaXMuc2V0dGluZ3MuaW1nQ3JvcC5kYXRhKCdKY3JvcCcpO1xuXHRcdFx0XHR0aGlzLmpjcm9wX2ltZy5kZXN0cm95KCk7XG5cdFx0XHR9XG5cblx0XHRcdGlmKCAhdGhpcy5zZXR0aW5ncy5wcmV2ZW50RHVwbGljaXR5ICkge1xuXHRcdFx0XHQvLyBJbml0IGltYWdlIHVwbG9hZGVyIGFuZCBhY3Rpb25zXG5cdFx0XHRcdG1ldGhvZHMucmVhc3NpZ25BY3Rpb25zLmNhbGwodGhpcyk7XG5cdFx0XHRcdG1ldGhvZHMucmVuZGVyVXBsb2FkZXJJbWcuY2FsbCh0aGlzLCB0aGlzLnNldHRpbmdzLnVwbG9hZGVySW1nKTtcblx0XHRcdFx0bWV0aG9kcy5yZW5kZXJJbWFnZUNyb3AuY2FsbCh0aGlzLCB0aGlzLnNldHRpbmdzLmltZ0Nyb3ApO1xuXHRcdFx0fVxuXHRcdH0sXG5cblx0XHQvKipcblx0XHQqIC0tLS0tLS0tLS0tXG5cdFx0KiBBcGkgbWV0aG9kc1xuXHRcdCogLS0tLS0tLS0tLS1cblx0XHQqL1xuXG5cdFx0LyoqXG5cdFx0KiBjaGFuZ2UgSW1hZ2Vcblx0XHQqIEBwYXJhbSBTdHJpbmcgdXJsSW1hZ2Vcblx0XHQqIEBwYXJhbSBGdW5jdGlvbiBjYWxsYmFja1xuXHRcdCovXG5cdFx0Y2hhbmdlSW1hZ2UgOiBmdW5jdGlvbih1cmxJbWFnZSwgY2FsbGJhY2spIHtcblx0XHRcdG1ldGhvZHMucmVhc3NpZ25BY3Rpb25zLmNhbGwodGhpcyk7XG5cdFx0XHRtZXRob2RzLnNldEltYWdlLmNhbGwodGhpcywgdXJsSW1hZ2UsIGNhbGxiYWNrKTtcblx0XHR9LFxuXG5cdFx0LyoqXG5cdFx0KiBnZXQgaW1hZ2UgY3JvcCBlbGVtZW50XG5cdFx0Ki9cblx0XHRnZXRJbWdDcm9wIDogZnVuY3Rpb24gKCkge1xuXHRcdFx0cmV0dXJuIHRoaXMuc2V0dGluZ3MuaW1nQ3JvcDtcblx0XHR9LFxuXG5cdFx0LyoqXG5cdFx0KiBnZXQgZm9ybSBjcm9wIGVsZW1lbnRcblx0XHQqL1xuXHRcdGdldEZvcm1Dcm9wIDogZnVuY3Rpb24gKCkge1xuXHRcdFx0cmV0dXJuIHRoaXMuc2V0dGluZ3MuZm9ybUNyb3A7XG5cdFx0fSxcblxuXHRcdC8qKlxuXHRcdCogZ2V0IHVwbG9hZGVyIGltYWdlIGVsZW1lbnRcblx0XHQqL1xuXHRcdGdldFVwbG9hZGVySW1nIDogZnVuY3Rpb24gKCkge1xuXHRcdFx0cmV0dXJuIHRoaXMuc2V0dGluZ3MudXBsb2FkZXJJbWc7XG5cdFx0fSxcblxuXHRcdC8qKlxuXHRcdCogZ2V0IGltYWdlIHByZXZpZXcgZWxlbWVudFxuXHRcdCovXG5cdFx0Z2V0UHJldmlld0ltZyA6IGZ1bmN0aW9uICgpIHtcblx0XHRcdHJldHVybiB0aGlzLnNldHRpbmdzLnByZXZpZXdJbWc7XG5cdFx0fSxcblxuXHRcdC8qKlxuXHRcdCogZGVzdHJveSBvYmplY3QgcGx1Z2luXG5cdFx0Ki9cblx0XHRkZXN0cm95IDogZnVuY3Rpb24gKCkge1xuXHRcdFx0bWV0aG9kcy5kZXN0cm95LmNhbGwodGhpcyk7XG5cdFx0fVxuXHR9O1xuXG5cdCQuZm4uaW1hZ2VVcGxvYWRlckNyb3AgPSBmdW5jdGlvbihvcHRzT3JDbWQpIHtcblx0XHR2YXIgc2VsZiA9IHRoaXMsIHNlbGZBcmdzID0gYXJndW1lbnRzLCByZXRWYWxzID0gW107XG5cblx0XHRpZiAoICQodGhpcykuZGF0YSgnaW1hZ2VVcGxvYWRlckNyb3AnKSAhPT0gdW5kZWZpbmVkICYmICQuaXNGdW5jdGlvbigkKHRoaXMpLmRhdGEoJ2ltYWdlVXBsb2FkZXJDcm9wJylbb3B0c09yQ21kXSkgKSB7XG5cblx0XHRcdHZhciBwbHVnID0gJCh0aGlzKS5kYXRhKCdpbWFnZVVwbG9hZGVyQ3JvcCcpO1xuXHRcdFx0cmV0dXJuIHBsdWdbb3B0c09yQ21kXS5hcHBseShwbHVnLCBzbGljZS5jYWxsKHNlbGZBcmdzLCAxKSk7XG5cblx0XHR9IGVsc2UgaWYgKHR5cGVvZiBvcHRzT3JDbWQgPT09ICdvYmplY3QnIHx8ICFvcHRzT3JDbWQpIHtcblxuXHRcdFx0cmV0dXJuIHRoaXMuZWFjaChmdW5jdGlvbihpbmRleCwgZWwpIHtcblxuXHRcdFx0XHR2YXIgcGx1Z2luID0gbmV3ICQuaW1hZ2VVcGxvYWRlckNyb3AodGhpcywgb3B0c09yQ21kKTtcblxuXHRcdFx0XHQkKHRoaXMpLmRhdGEoJ2ltYWdlVXBsb2FkZXJDcm9wJywgcGx1Z2luKTtcblx0XHRcdH0pO1xuXG5cdFx0fSBlbHNlIHtcblx0XHRcdCQuZXJyb3IoICdNZXRob2QgXCInICsgIG9wdHNPckNtZCArICdcIiBkb2VzIG5vdCBleGlzdCBpbiBpbWFnZVVwbG9hZGVyQ3JvcCAtIChrcm9iaW5nKSBwbHVnaW4hJyk7XG5cdFx0fVxuXHR9O1xuXG59KSk7XG4iXX0=
