!function(i){"use strict";"function"==typeof define&&define.amd?define(["jquery"],i):"object"==typeof module&&module.exports?module.exports=i(require("jquery")):i(jQuery)}(function(i){"use strict";var t=Array.prototype.slice,e=(Array.prototype.splice,{formCrop:null,btnToCrop:null,imgCrop:null,previewImg:null,uploaderImg:null,templateImgUploader:"",configImg:{maxWidthImg:0,maxHeightImg:0,minWidthImg:0,minHeightImg:0,allowedExtensions:["jpeg","jpg","png"],sizeLimit:0,sendOriginal:!0,defaultQuality:100},uploadding:{inputName:"file",endpoint:"",params:{}},cropping:{endpoint:"",params:{}},extraDropzones:[i("#wrapper-image-crop")],callbacks:{onCropping:function(i){},onCropComplete:function(i,t,e){},onCropError:function(i,t,e){},onLoadImg:function(i,t,e){},onCompleteLoad:function(i,t,e,s){}},messages:{typeError:"{file} tiene una extensión inválida. Extensiones válidas {extensions}.",sizeError:"{file} es demasiado grande, el tamaño máximo de archivo es {sizeLimit}.",minSizeError:"{file} es demasiado pequeño, el tamaño mínimo de archivo es {minSizeLimit}.",emptyError:"{file} está vacío, por favor seleccione los archivos nuevamente sin él.",noFilesError:"No hay archivos para cargar",tooManyItemsError:"Demasiados articulos ({netItems}) sería cargado. Límite de artículo es {itemLimit}.",maxHeightImageError:"La imagen es muy alta.",maxWidthImageError:"La imagen es muy amplia.",minHeightImageError:"La imagen no es lo suficientemente alta",minWidthImageError:"La imagen no es lo suficientemente amplia",retryFailTooManyItems:"Error de reintentos - ha alcanzado el límite de su archivo.",onLeave:"Los archivos se cargan, si se va ahora, la carga se cancelará.",unsupportedBrowserIos8Safari:"Error irrecuperable: este navegador no permite la carga de archivos de ningún tipo debido a errores graves en iOS8 Safari. Utilice iOS8 Chrome hasta que Apple resuelva estos problemas."},showMessage:function(i){return alertify.alert(i)},showConfirm:function(i){var t=new qq.Promise;return alertify.confirm(i,function(i){return i?t.success(i):t.failure()}),t},showPrompt:function(i,t){var e=new qq.Promise;return alertify.prompt(i,function(i,t){return i?e.success(t):e.failure(t)},t),e}}),s={reassignActions:function(){this.settings.uploaderImg.off("complete"),this.settings.uploaderImg.on("complete",s.onCompleteLoadImg.bind(this)),this.settings.btnToCrop?(this.settings.btnToCrop.off("click",s.submitCropImage.bind(this)),this.settings.btnToCrop.on("click",s.submitCropImage.bind(this))):(this.settings.formCrop.off("submit",s.submitCropImage.bind(this)),this.settings.formCrop.on("submit",s.submitCropImage.bind(this)))},destroy:function(){void 0!==this.settings.imgCrop.data("Jcrop")&&this.jcrop_img.destroy(),this.settings.uploaderImg.off("complete"),this.settings.formCrop.off("submit"),this.$element.removeData("imageUploaderCrop")},setImage:function(t,e){t||(t=this.settings.imgCrop.attr("src"))||(t="");try{if(!this.settings.imgCrop)throw"The imgCrop element have not went assign"}catch(i){console.error("Error: "+i+".")}var n=this;void 0!==this.settings.imgCrop.data("Jcrop")?(this.jcrop_img=this.settings.imgCrop.data("Jcrop"),this.jcrop_img.setImage(t,function(){var i=[];i=this.settings.configImg.minWidthImg&&this.settings.configImg.minHeightImg?[this.settings.configImg.minWidthImg,this.settings.configImg.minHeightImg]:this.jcrop_img.getBounds(),s.changeOptsCrop.call(n,{imgSet:t,minWidth:n.settings.configImg.minWidthImg,minHeight:n.settings.configImg.minHeightImg,imgWidth:i[0],imgHeight:i[1]}),n.settings.formCrop.find("input#crop_type").val("url"),n.settings.formCrop.find("input#file_name").val(t),n.settings.formCrop.find("input#file_type").val(t.split(".").slice(-1))})):(this.settings.imgCrop.attr("src",t),s.renderImageCrop.call(this,this.settings.imgCrop,function(){var i=[];i=this.settings.configImg.minWidthImg&&this.settings.configImg.minHeightImg?[this.settings.configImg.minWidthImg,this.settings.configImg.minHeightImg]:this.jcrop_img.getBounds(),s.changeOptsCrop.call(this,{imgSet:t,minWidth:this.settings.configImg.minWidthImg,minHeight:this.settings.configImg.minHeightImg,imgWidth:i[0],imgHeight:i[1]}),this.settings.formCrop.find("input#crop_type").val("url"),this.settings.formCrop.find("input#file_name").val(t),this.settings.formCrop.find("input#file_type").val(t.split(".").slice(-1))}.bind(this))),i.isFunction(e)&&e.call()},renderUploaderImg:function(t){if(!{}.hasOwnProperty.call(i.fn,"fineUploader"))return console.error("Error: The imageUploaderCrop jQuery library do need of the fine-uploader jQuery library."),!1;t.fineUploader({debug:!1,template:this.settings.templateImgUploader,request:this.settings.uploadding,thumbnails:{placeholders:{waitingPath:"img/waiting-generic.png",notAvailablePath:"img/not_available-generic.png"}},autoUpload:!0,multiple:!1,validation:{image:{maxWidth:this.settings.configImg.maxWidthImg||e.configImg.maxWidthImg,maxHeight:this.settings.configImg.maxHeightImg||e.configImg.maxHeightImg},allowedExtensions:this.settings.configImg.allowedExtensions||e.configImg.allowedExtensions,sizeLimit:this.settings.configImg.sizeLimit||e.configImg.sizeLimit,stopOnFirstInvalidFile:!1,itemLimit:0},scaling:{sendOriginal:this.settings.configImg.sendOriginal||e.configImg.sendOriginal,defaultQuality:this.settings.configImg.defaultQuality||e.configImg.defaultQuality},callbacks:{onUpload:s.onLoadImg.bind(this)},messages:{typeError:e.messages.typeError,sizeError:e.messages.sizeError,minSizeError:e.messages.minSizeError,emptyError:e.messages.emptyError,noFilesError:e.messages.noFilesError,tooManyItemsError:e.messages.tooManyItemsError,maxHeightImageError:e.messages.maxHeightImageError,maxWidthImageError:e.messages.maxWidthImageError,minHeightImageError:e.messages.minHeightImageError,minWidthImageError:e.messages.minWidthImageError,retryFailTooManyItems:e.messages.retryFailTooManyItems,onLeave:e.messages.onLeave,unsupportedBrowserIos8Safari:e.messages.unsupportedBrowserIos8Safari},dragAndDrop:{extraDropzones:this.settings.extraDropzones},showMessage:this.settings.showMessage,showConfirm:this.settings.showConfirm,showPrompt:this.settings.showPrompt})},renderImageCrop:function(t,e){if(!{}.hasOwnProperty.call(i.fn,"Jcrop"))return console.error("Error: The imageUploaderCrop jQuery library needs of the jcrop jQuery library."),!1;var n=this;t.Jcrop({onSelect:s.setCoords.bind(this),onChange:s.setCoords.bind(this),onRelease:function(){},bgColor:"black",bgOpacity:.4,setSelect:[0,0,this.settings.configImg.minWidthImg,this.settings.configImg.minHeightImg],aspectRatio:this.settings.configImg.minWidthImg/this.settings.configImg.minHeightImg,boxWidth:t.parent().width(),boxHeight:0,allowSelect:!1,allowResize:!0},function(){n.jcrop_img=this;var i=n.jcrop_img.getBounds();s.changeOptsCrop.call(n,{imgSet:t.attr("src"),minWidth:n.settings.configImg.minWidthImg,minHeight:n.settings.configImg.minHeightImg,imgWidth:i[0],imgHeight:i[1]}),"function"==typeof e&&e.call()})},changeOptsCrop:function(t,e){var s={imgSet:"",minWidth:0,minHeight:0,imgWidth:0,imgHeight:0,dimSelect:[0,0],ix:0,iy:0};i.extend(s,t),s.dimSelect=function(i,t){var e=Math.min(i,t);return i==t?[i,t]:[e,e]}(s.imgWidth,s.imgHeight),s.ix=(s.imgWidth-s.dimSelect[0])/2,this.jcrop_img.setOptions({trueSize:[Math.floor(s.imgWidth),Math.floor(s.imgHeight)]}),this.settings.previewImg.attr("src",s.imgSet),this.jcrop_img.setSelect([s.ix,s.iy,s.dimSelect[0],s.dimSelect[1]]),"function"==typeof e&&e.call()},submitCropImage:function(t){t.preventDefault();var e=function(t){var e={},s=[];return s=i.prototype.isPrototypeOf(t)?t.serializeArray():i(t).serializeArray(),i.each(s,function(){void 0!==e[this.name]?(e[this.name].push||(e[this.name]=[e[this.name]]),e[this.name].push(this.value||"")):e[this.name]=this.value||""}),e}(this.settings.formCrop);e.targ_w=this.settings.configImg.minWidthImg,e.targ_h=this.settings.configImg.minHeightImg,i.extend(e,this.settings.cropping.params),i.isFunction(this.settings.callbacks.onCropping)&&this.settings.callbacks.onCropping.call(this,this.jcrop_img),this.settings.formCrop.find(":submit").addClass("disabled"),i.post(this.settings.cropping.endpoint,e,s.onSuccessCrop.bind(this)).fail(s.onErrorCrop.bind(this))},setCoords:function(t){var e=this.settings.configImg.minHeightImg/this.settings.configImg.minWidthImg,s=null!==this.jcrop_img&&this.jcrop_img.getBounds(),n=i(this.settings.previewImg.parent()[0]).width()/t.w,o=e*i(this.settings.previewImg.parent()[0]).width()/t.h;this.settings.previewImg.attr("src")&&i(this.settings.previewImg.parent()[0]).height(e*i(this.settings.previewImg.parent()[0]).width()),this.settings.formCrop.find("input.crop-x").val(t.x),this.settings.formCrop.find("input.crop-y").val(t.y),this.settings.formCrop.find("input.crop-w").val(t.w),this.settings.formCrop.find("input.crop-h").val(t.h),s&&this.settings.previewImg.css({width:Math.round(n*s[0])+"px",height:Math.round(o*s[1])+"px",minWidth:Math.round(n*s[0])+"px",minHeight:Math.round(o*s[1])+"px",marginLeft:"-"+Math.round(n*t.x)+"px",marginTop:"-"+Math.round(o*t.y)+"px"})},onLoadImg:function(t,e){var n=this.settings.uploaderImg.fineUploader("getDropTarget",t);void 0!==n&&n.length&&(n.hasClass("image-area-drop")||n.hasClass("wrapper-image-crop"))&&(s.reassignActions.call(this),s.setImage.call(this)),i.isFunction(this.settings.callbacks.onLoadImg)&&this.settings.callbacks.onLoadImg.call(this,this.settings.uploaderImg,t,e)},onCompleteLoadImg:function(t,e,n,o){o.success&&(void 0!==this.settings.imgCrop.data("Jcrop")?this.jcrop_img.setImage(o.file_path,function(){o.file_width,o.file_height;s.changeOptsCrop.call(this,{imgSet:o.file_path,minWidth:this.settings.configImg.minWidthImg,minHeight:this.settings.configImg.minHeightImg,imgWidth:o.file_width,imgHeight:o.file_height},function(){i.isFunction(this.settings.callbacks.onCompleteLoad)&&this.settings.callbacks.onCompleteLoad.call(this,this.settings.uploaderImg,e,n,o)}.bind(this))}.bind(this)):(this.settings.imgCrop.attr("src",o.file_path),s.renderImageCrop.call(this,this.settings.imgCrop,function(){s.changeOptsCrop.call(this,{imgSet:o.file_path,minWidth:this.settings.configImg.minWidthImg,minHeight:this.settings.configImg.minHeightImg,imgWidth:o.file_width,imgHeight:o.file_height},function(){i.isFunction(this.settings.callbacks.onCompleteLoad)&&this.settings.callbacks.onCompleteLoad.call(this,this.settings.uploaderImg,e,n,o)}.bind(this))}.bind(this))),this.settings.formCrop.find("input#crop_type").val("name"),this.settings.formCrop.find("input#file_name").val(o.file_name),this.settings.formCrop.find("input#file_type").val(o.file_type))},onSuccessCrop:function(t,e,s){this.settings.formCrop.find(":submit").removeClass("disabled"),i.isFunction(this.settings.callbacks.onCropComplete)&&this.settings.callbacks.onCropComplete.call(this,this.jcrop_img,t,s)},onErrorCrop:function(t,e,s){this.settings.formCrop.find(":submit").removeClass("disabled"),i.isFunction(this.settings.callbacks.onCropError)&&this.settings.callbacks.onCropError.call(this,this.jcrop_img,t,s)}};i.imageUploaderCrop=function(t,e){e||(e={});this.jcrop_img=null,this.element=t,this.$element=i(t),i.isFunction(this.init)&&this.init(t,e)},i.imageUploaderCrop.prototype={settings:{},init:function(t,n){this.settings=i.extend({},e,n),this.settings.imgCrop&&void 0!==this.settings.imgCrop.data("Jcrop")&&(this.jcrop_img=this.settings.imgCrop.data("Jcrop"),this.jcrop_img.destroy()),s.reassignActions.call(this),s.renderUploaderImg.call(this,this.settings.uploaderImg),s.renderImageCrop.call(this,this.settings.imgCrop)},changeImage:function(i,t){s.reassignActions.call(this),s.setImage.call(this,i,t)},getImgCrop:function(){return this.settings.imgCrop},getFormCrop:function(){return this.settings.formCrop},getUploaderImg:function(){return this.settings.uploaderImg},getPreviewImg:function(){return this.settings.previewImg},destroy:function(){s.destroy.call(this)}},i.fn.imageUploaderCrop=function(e){var s=arguments;if(void 0!==i(this).data("imageUploaderCrop")&&i.isFunction(i(this).data("imageUploaderCrop")[e])){var n=i(this).data("imageUploaderCrop");return n[e].apply(n,t.call(s,1))}if("object"==typeof e||!e)return this.each(function(t,s){var n=new i.imageUploaderCrop(this,e);i(this).data("imageUploaderCrop",n)});i.error('Method "'+e+'" does not exist in imageUploaderCrop - (krobing) plugin!')}});
//# sourceMappingURL=data:application/json;charset=utf8;base64,
