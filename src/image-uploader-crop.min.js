!function(i){"use strict";"function"==typeof define&&define.amd?define(["jquery"],i):"object"==typeof module&&module.exports?module.exports=i(require("jquery")):i(jQuery)}(function(i){"use strict";function t(t){var s={},e=[];return e=i.prototype.isPrototypeOf(t)?t.serializeArray():i(t).serializeArray(),i.each(e,function(){void 0!==s[this.name]?(s[this.name].push||(s[this.name]=[s[this.name]]),s[this.name].push(this.value||"")):s[this.name]=this.value||""}),s}function s(i,t){var s=Math.min(i,t);return i==t?[i,t]:[s,s]}function e(){return!!{}.hasOwnProperty.call(i.fn,"fineUploader")}function n(){return!!{}.hasOwnProperty.call(i.fn,"Jcrop")}var o=Array.prototype.slice,g=(Array.prototype.splice,{formCrop:null,btnToCrop:null,imgCrop:null,previewImg:null,uploaderImg:null,templateImgUploader:"",configImg:{maxWidthImg:0,maxHeightImg:0,minWidthImg:0,minHeightImg:0,allowedExtensions:["jpeg","jpg","png"],sizeLimit:0,sendOriginal:!0,defaultQuality:100},uploadding:{inputName:"file",endpoint:"",params:{}},cropping:{endpoint:"",params:{}},extraDropzones:[i("#wrapper-image-crop")],callbacks:{onCropping:function(i){},onCropComplete:function(i,t,s){},onCropError:function(i,t,s){},onLoadImg:function(i,t,s){},onCompleteLoad:function(i,t,s,e){}},showMessage:function(i){return alertify.alert(i)},showConfirm:function(i){var t=new qq.Promise;return alertify.confirm(i,function(i){return i?t.success(i):t.failure()}),t},showPrompt:function(i,t){var s=new qq.Promise;return alertify.prompt(i,function(i,t){return i?s.success(t):s.failure(t)},t),s}}),r={reassignActions:function(){this.settings.uploaderImg.off("complete"),this.settings.uploaderImg.on("complete",r.onCompleteLoadImg.bind(this)),this.settings.btnToCrop?(this.settings.btnToCrop.off("click",r.submitCropImage.bind(this)),this.settings.btnToCrop.on("click",r.submitCropImage.bind(this))):(this.settings.formCrop.off("submit",r.submitCropImage.bind(this)),this.settings.formCrop.on("submit",r.submitCropImage.bind(this)))},destroy:function(){void 0!==this.settings.imgCrop.data("Jcrop")&&this.jcrop_img.destroy(),this.settings.uploaderImg.off("complete"),this.settings.formCrop.off("submit"),this.$element.removeData("imageUploaderCrop")},setImage:function(t,s){t||(t=this.settings.imgCrop.attr("src"))||(t="");try{if(!this.settings.imgCrop)throw"The imgCrop element have not went assign"}catch(i){console.error("Error: "+i+".")}var e=this;void 0!==this.settings.imgCrop.data("Jcrop")?(this.jcrop_img=this.settings.imgCrop.data("Jcrop"),this.jcrop_img.setImage(t,function(){var i=[];i=this.settings.configImg.minWidthImg&&this.settings.configImg.minHeightImg?[this.settings.configImg.minWidthImg,this.settings.configImg.minHeightImg]:this.jcrop_img.getBounds(),r.changeOptsCrop.call(e,{imgSet:t,minWidth:e.settings.configImg.minWidthImg,minHeight:e.settings.configImg.minHeightImg,imgWidth:i[0],imgHeight:i[1]}),e.settings.formCrop.find("input#crop_type").val("url"),e.settings.formCrop.find("input#file_name").val(t),e.settings.formCrop.find("input#file_type").val(t.split(".").slice(-1))})):(this.settings.imgCrop.attr("src",t),r.renderImageCrop.call(this,this.settings.imgCrop,function(){var i=[];i=this.settings.configImg.minWidthImg&&this.settings.configImg.minHeightImg?[this.settings.configImg.minWidthImg,this.settings.configImg.minHeightImg]:this.jcrop_img.getBounds(),r.changeOptsCrop.call(this,{imgSet:t,minWidth:this.settings.configImg.minWidthImg,minHeight:this.settings.configImg.minHeightImg,imgWidth:i[0],imgHeight:i[1]}),this.settings.formCrop.find("input#crop_type").val("url"),this.settings.formCrop.find("input#file_name").val(t),this.settings.formCrop.find("input#file_type").val(t.split(".").slice(-1))}.bind(this))),i.isFunction(s)&&s.call()},renderUploaderImg:function(i){if(!e())return console.error("Error: The imageUploaderCrop jQuery library do need of the fine-uploader jQuery library."),!1;i.fineUploader({debug:!1,template:this.settings.templateImgUploader,request:this.settings.uploadding,thumbnails:{placeholders:{waitingPath:"img/waiting-generic.png",notAvailablePath:"img/not_available-generic.png"}},autoUpload:!0,multiple:!1,validation:{image:{maxWidth:this.settings.configImg.maxWidthImg||g.configImg.maxWidthImg,maxHeight:this.settings.configImg.maxHeightImg||g.configImg.maxHeightImg},allowedExtensions:this.settings.configImg.allowedExtensions||g.configImg.allowedExtensions,sizeLimit:this.settings.configImg.sizeLimit||g.configImg.sizeLimit,stopOnFirstInvalidFile:!1,itemLimit:0},scaling:{sendOriginal:this.settings.configImg.sendOriginal||g.configImg.sendOriginal,defaultQuality:this.settings.configImg.defaultQuality||g.configImg.defaultQuality},callbacks:{onUpload:r.onLoadImg.bind(this)},dragAndDrop:{extraDropzones:this.settings.extraDropzones},showMessage:this.settings.showMessage,showConfirm:this.settings.showConfirm,showPrompt:this.settings.showPrompt})},renderImageCrop:function(i,t){if(!n())return console.error("Error: The imageUploaderCrop jQuery library needs of the jcrop jQuery library."),!1;var s=this;i.Jcrop({onSelect:r.setCoords.bind(this),onChange:r.setCoords.bind(this),onRelease:function(){},bgColor:"black",bgOpacity:.4,setSelect:[0,0,this.settings.configImg.minWidthImg,this.settings.configImg.minHeightImg],aspectRatio:this.settings.configImg.minWidthImg/this.settings.configImg.minHeightImg,boxWidth:i.parent().width(),boxHeight:0,allowSelect:!1,allowResize:!0},function(){s.jcrop_img=this;var e=s.jcrop_img.getBounds();r.changeOptsCrop.call(s,{imgSet:i.attr("src"),minWidth:s.settings.configImg.minWidthImg,minHeight:s.settings.configImg.minHeightImg,imgWidth:e[0],imgHeight:e[1]}),"function"==typeof t&&t.call()})},changeOptsCrop:function(t,e){var n={imgSet:"",minWidth:0,minHeight:0,imgWidth:0,imgHeight:0,dimSelect:[0,0],ix:0,iy:0};i.extend(n,t),n.dimSelect=s(n.imgWidth,n.imgHeight),n.ix=(n.imgWidth-n.dimSelect[0])/2,this.jcrop_img.setOptions({trueSize:[Math.floor(n.imgWidth),Math.floor(n.imgHeight)]}),this.settings.previewImg.attr("src",n.imgSet),this.jcrop_img.setSelect([n.ix,n.iy,n.dimSelect[0],n.dimSelect[1]]),"function"==typeof e&&e.call()},submitCropImage:function(s){s.preventDefault();var e=t(this.settings.formCrop);e.targ_w=this.settings.configImg.minWidthImg,e.targ_h=this.settings.configImg.minHeightImg,i.extend(e,this.settings.cropping.params),i.isFunction(this.settings.callbacks.onCropping)&&this.settings.callbacks.onCropping.call(this,this.jcrop_img),this.settings.formCrop.find(":submit").addClass("disabled"),i.post(this.settings.cropping.endpoint,e,r.onSuccessCrop.bind(this)).fail(r.onErrorCrop.bind(this))},setCoords:function(t){var s=this.settings.configImg.minHeightImg/this.settings.configImg.minWidthImg,e=null!==this.jcrop_img&&this.jcrop_img.getBounds(),n=i(this.settings.previewImg.parent()[0]).width()/t.w,o=s*i(this.settings.previewImg.parent()[0]).width()/t.h;this.settings.previewImg.attr("src")&&i(this.settings.previewImg.parent()[0]).height(s*i(this.settings.previewImg.parent()[0]).width()),this.settings.formCrop.find("input.crop-x").val(t.x),this.settings.formCrop.find("input.crop-y").val(t.y),this.settings.formCrop.find("input.crop-w").val(t.w),this.settings.formCrop.find("input.crop-h").val(t.h),e&&this.settings.previewImg.css({width:Math.round(n*e[0])+"px",height:Math.round(o*e[1])+"px",minWidth:Math.round(n*e[0])+"px",minHeight:Math.round(o*e[1])+"px",marginLeft:"-"+Math.round(n*t.x)+"px",marginTop:"-"+Math.round(o*t.y)+"px"})},onLoadImg:function(t,s){var e=this.settings.uploaderImg.fineUploader("getDropTarget",t);void 0!==e&&e.length&&(e.hasClass("image-area-drop")||e.hasClass("wrapper-image-crop"))&&(r.reassignActions.call(this),r.setImage.call(this)),i.isFunction(this.settings.callbacks.onLoadImg)&&this.settings.callbacks.onLoadImg.call(this,this.settings.uploaderImg,t,s)},onCompleteLoadImg:function(t,s,e,n){n.success&&(void 0!==this.settings.imgCrop.data("Jcrop")?this.jcrop_img.setImage(n.file_path,function(){n.file_width,n.file_height;r.changeOptsCrop.call(this,{imgSet:n.file_path,minWidth:this.settings.configImg.minWidthImg,minHeight:this.settings.configImg.minHeightImg,imgWidth:n.file_width,imgHeight:n.file_height},function(){i.isFunction(this.settings.callbacks.onCompleteLoad)&&this.settings.callbacks.onCompleteLoad.call(this,this.settings.uploaderImg,s,e,n)}.bind(this))}.bind(this)):(this.settings.imgCrop.attr("src",n.file_path),r.renderImageCrop.call(this,this.settings.imgCrop,function(){r.changeOptsCrop.call(this,{imgSet:n.file_path,minWidth:this.settings.configImg.minWidthImg,minHeight:this.settings.configImg.minHeightImg,imgWidth:n.file_width,imgHeight:n.file_height},function(){i.isFunction(this.settings.callbacks.onCompleteLoad)&&this.settings.callbacks.onCompleteLoad.call(this,this.settings.uploaderImg,s,e,n)}.bind(this))}.bind(this))),this.settings.formCrop.find("input#crop_type").val("name"),this.settings.formCrop.find("input#file_name").val(n.file_name),this.settings.formCrop.find("input#file_type").val(n.file_type))},onSuccessCrop:function(t,s,e){this.settings.formCrop.find(":submit").removeClass("disabled"),i.isFunction(this.settings.callbacks.onCropComplete)&&this.settings.callbacks.onCropComplete.call(this,this.jcrop_img,t,e)},onErrorCrop:function(t,s,e){this.settings.formCrop.find(":submit").removeClass("disabled"),i.isFunction(this.settings.callbacks.onCropError)&&this.settings.callbacks.onCropError.call(this,this.jcrop_img,t,e)}};i.imageUploaderCrop=function(t,s){s||(s={});var e=this;this.jcrop_img=null,this.element=t,this.$element=i(t),i.isFunction(e.init)&&e.init(t,s)},i.imageUploaderCrop.prototype={settings:{},init:function(t,s){this.settings=i.extend({},g,s),this.settings.imgCrop&&void 0!==this.settings.imgCrop.data("Jcrop")&&(this.jcrop_img=this.settings.imgCrop.data("Jcrop"),this.jcrop_img.destroy()),r.reassignActions.call(this),r.renderUploaderImg.call(this,this.settings.uploaderImg),r.renderImageCrop.call(this,this.settings.imgCrop)},changeImage:function(i,t){r.reassignActions.call(this),r.setImage.call(this,i,t)},getImgCrop:function(){return this.settings.imgCrop},getFormCrop:function(){return this.settings.formCrop},getUploaderImg:function(){return this.settings.uploaderImg},getPreviewImg:function(){return this.settings.previewImg},destroy:function(){r.destroy.call(this)}},i.fn.imageUploaderCrop=function(t){var s=arguments;if(void 0!==i(this).data("imageUploaderCrop")&&i.isFunction(i(this).data("imageUploaderCrop")[t])){var e=i(this).data("imageUploaderCrop");return e[t].apply(e,o.call(s,1))}if("object"==typeof t||!t)return this.each(function(s,e){var n=new i.imageUploaderCrop(this,t);i(this).data("imageUploaderCrop",n)});i.error('Method "'+t+'" does not exist in imageUploaderCrop - (krobing) plugin!')}});
//# sourceMappingURL=data:application/json;charset=utf8;base64,
